{
  "info": {
    "title": "SpendHQ PPM API",
    "description": "SpendHQ PPM API was first released in 2017 to support the growth of the partnerships and the need to strengthen data exchanges.<br />It has a secured authentication process based on two well known web standards: OAuth and JWT.<br />Its design was largely inspired by the JSON API specification.",
    "contact": {
      "name": "API Integration Support"
    },
    "version": "v3",
    "x-logo": {
      "url": "https://per-angusta-maintenance.s3-eu-west-1.amazonaws.com/logo/logo-per-angusta-api-documentation.png",
      "backgroundColor": "transparent",
      "altText": "SpendHQ PPM API"
    }
  },
  "swagger": "2.0",
  "produces": [
    "application/xml",
    "application/json"
  ],
  "securityDefinitions": {
    "OAuth2": {
      "type": "oauth2",
      "description": "SpendHQ PPM API implements the « Client Credentials » grant of the protocol OAuth 2.0 to authorize third-party clients from accessing protected resources.",
      "flow": "application",
      "tokenUrl": "/api/oauth/token",
      "scopes": {
        "assets": "Assets",
        "budgets": "Projects",
        "contracts": "Contracts",
        "suppliers": "Suppliers",
        "data_sources": "Batch Data Imports and Templates",
        "opportunities": "Opportunities",
        "sessions": "Sessions"
      }
    }
  },
  "host": "demo.per-angusta.com",
  "basePath": "/api/v3",
  "x-tagGroups": [
    {
      "name": "Endpoints",
      "tags": [
        "assets",
        "budgets",
        "contracts",
        "negotiations",
        "opportunities",
        "suppliers",
        "widgets",
        "kpis",
        "data_sources",
        "sessions"
      ]
    },
    {
      "name": "Fundamentals",
      "tags": [
        "authentication",
        "pagination",
        "sorting",
        "filtering",
        "end_user_policy",
        "rate_limits"
      ]
    }
  ],
  "tags": [
    {
      "name": "assets",
      "description": "Endpoints for Assets",
      "x-displayName": "Assets"
    },
    {
      "name": "budgets",
      "description": "Endpoints for Projects",
      "x-displayName": "Projects"
    },
    {
      "name": "contracts",
      "description": "Endpoints for Contracts",
      "x-displayName": "Contracts"
    },
    {
      "name": "negotiations",
      "description": "Endpoints for Saving Reports",
      "x-displayName": "Savings Reports"
    },
    {
      "name": "suppliers",
      "description": "Endpoints for Suppliers",
      "x-displayName": "Suppliers"
    },
    {
      "name": "widgets",
      "description": "Endpoints for Widgets",
      "x-displayName": "Widgets"
    },
    {
      "name": "data_sources",
      "description": "Endpoints for Data Imports",
      "x-displayName": "Batch Data Imports"
    },
    {
      "name": "opportunities",
      "description": "Endpoints for Opportunities",
      "x-displayName": "Opportunities"
    },
    {
      "name": "sessions",
      "description": "Endpoints for Sessions",
      "x-displayName": "Sessions"
    },
    {
      "name": "authentication",
      "description": "In every requests, you need to pass a Bearer Token in the `Authorization` header in the form of `Authorization: Bearer <token>`.\n\nFor instance, with curl you should use it like that:\n\n```bash\ncurl -G -X GET https://staging.per-angusta.com/api/v3/suppliers \\\n  -H 'Authorization: Bearer <token>'\n```\n",
      "x-displayName": "Authentication",
      "x-traitTag": true
    },
    {
      "name": "pagination",
      "description": "The number of resources returned in a response is limited by a page-based strategy. The maximum number of resources per page is 500 and there is no limit of number of pages.\n\nParameters:\n- `page[number]` Page number, by default “1”\n- `page[size]` Number of resources per page, default value depending on the endpoint\n\nTo help you traverse a paginated data set, the primary object “links” available at the root of the response contains up to 4 links as described below:\n- `first` If current page number is different than “1”, contains a link to the first page\n- `prev` If current page number is different than “1”, contains a link to the previous page\n- `next` If current page number is different than the last available page number, contains a link to the next page\n- `last` If current page number is different than the last available page number, contains a link to the last page\n\nThe primary object “meta” available at the root of the response contains following information:\n- `page_number` Current page number\n- `page_size` Current page size\n- `total_pages` Number of available pages\n- `total_count` Total number of resources that can be traversed through pagination\n\nExample of request with pagination options:\n```\ncurl -G -X GET  https://staging.per-angusta.com/api/v3/suppliers \\\n  -H 'Authorization: Bearer <token>' \\\n  -d 'page[number]=2&page[size]=30'\n```\n\nExample of primary object “links”:\n```\n{\n  \"links\": {\n    \"first\": \".../api/v3/suppliers?page[number]=1&page[size]=30\",\n    \"prev\": \".../api/v3/suppliers?page[number]=1&page[size]=30\",\n    \"next\": \".../api/v3/suppliers?page[number]=3&page[size]=30\",\n    \"last\": \".../api/v3/suppliers?page[number]=20&page[size]=30\"\n  }\n}\n```\n\nExample of primary object “meta” with pagination data:\n```\n{\n  \"meta\": {\n    \"page_number\": 2,\n    \"page_size\": 30,\n    \"total_pages\": 20,\n    \"total_count\": 582\n  }\n}\n```\n",
      "x-displayName": "Pagination",
      "x-traitTag": true
    },
    {
      "name": "sorting",
      "description": "You can ask for a different sorting of data sets using the parameter “sort”. It may accept a list of whitelisted attributes, separated by a comma “,”. The list of available attributes depends on the endpoint. If you don’t specify the direction, default is “ascending order”, it may be specified by using “+” (ascending) or “-“ (descending) in front of the attribute name.\n\nParameters:\n- `sort` By default “-updated_at” (sort by last modification date in descending order)\n\nThe primary object “meta” available at the root of the response contains following information:\n\n- `sort` Current sort options\n\nExample of request with sorting option “by name in ascending order and by last modification date in descending order”:\n```\ncurl -G -X GET  https://staging.per-angusta.com/api/v3/suppliers \\\n  -H 'Authorization: Bearer <token>' \\\n  -d 'sort=+name,-updated_at'\n```\n\nExample of primary object “meta” with sorting data:\n```\n{\n  \"meta\": {\n    \"sort\": \"-updated_at\"\n  }\n}\n```\n",
      "x-displayName": "Sorting",
      "x-traitTag": true
    },
    {
      "name": "filtering",
      "description": "Filtering allows you to filter data sets.\nYou can filter most of the list endpoints (check each endpoint for more informations).\n\nAt the time of writing this documentation, the following filtering options are available:\n\n- `filter[q]`: free text search\n- `filter[created_at_before]`: created before given date\n- `filter[created_at_after]`: created before given date\n- `filter[updated_at_before]`: updated before given date\n- `filter[updated_at_after]`: updated before given date\n\nDate filmters accepts ISO 8601 dates.\n\nExample of request using free text search and updated_at_before filter:\n```\ncurl -G -X GET  https://staging.per-angusta.com/api/v3/suppliers \\\n  -H 'Authorization: Bearer <token>' \\\n  -d 'filter[q]=xyz' \\\n  -d 'filter[updated_at_before]: 2023-10-05T14:17:36.208z'\n```\n",
      "x-displayName": "Filtering",
      "x-traitTag": true
    },
    {
      "name": "end_user_policy",
      "description": "Data sets can differ depending on the permissions of the authenticated End-User. By default, the policy which is applied is the “read” policy. If you are building a user interface to create objects through the API, you may want to filter data sets with “write” policy.\n\nIt won’t have any effect in case of Client authentication without specified “email”.\n\nParameters:\n- `policy[mode]` By default “read”, may be set to “write”\n\nThe primary object “meta” available at the root of the response contains following information:\n- `policy_mode` Current policy mode\n\nExample of request using “write” policy:\n```\ncurl -G -X GET https://staging.per-angusta.com/api/v2/objects/budgets \\\n  -H 'Authorization: Bearer <token>' \\\n  -d 'policy[mode]=write'\n```\n\nExample of primary object “meta” with policies data:\n```\n{\n  \"meta\": {\n    \"policy_mode\": \"read\"\n  }\n}\n```\n",
      "x-displayName": "End-User policy",
      "x-traitTag": true
    },
    {
      "name": "rate_limits",
      "description": "The maximum number of requests that are allowed is based on a time interval, some specified period or window of time.\n\nThe most common request limit is **200 requests per 60 seconds**, but some endpoints may have their own constraints.\n\nUse the HTTP headers in order to understand where the application is at for a given rate limit, on the method that was just utilized.\n- `X-RateLimit-Limit`: the maximum nb of requests per period\n- `X-RateLimit-Remaining`: the remaining allowed requests in current period\n- `X-RateLimit-Reset`: the remaining window before the rate limit resets, in UTC epoch seconds\n\nWhen an application exceeds the rate limit for a given endpoint, the API will return a HTTP 429 “Too Many Requests” response code, and the following error will be returned in the response body:\n\n```\n{ \"error\": { \"code\": 50429, \"message\": \"You have reached the limit of 200 requests per time window. Please wait 17 second(s) before trying to access the application again.\" } }\n````\n",
      "x-displayName": "Rate Limits",
      "x-traitTag": true
    }
  ],
  "paths": {
    "/assets": {
      "get": {
        "description": "List Assets",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Access Token type and value",
            "type": "string",
            "required": true
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Request Content Type",
            "type": "string",
            "enum": [
              "application/json",
              "application/x-www-form-urlencoded",
              "multipart/form-data"
            ],
            "required": true
          },
          {
            "in": "header",
            "name": "Accept",
            "description": "Requested Content Type",
            "type": "string",
            "default": "application/json",
            "enum": [
              "application/json",
              "application/xml"
            ],
            "required": false
          },
          {
            "in": "query",
            "name": "policy[mode]",
            "description": "Policy mode",
            "type": "string",
            "enum": [
              "read",
              "write"
            ],
            "required": false
          },
          {
            "in": "query",
            "name": "page[number]",
            "description": "Page number",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "page[size]",
            "description": "Page size",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "sort[]",
            "description": "Sorting options, comma separated values (ex: \\\"&sort=-updated_at,+name\\\")",
            "type": "array",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "filter[q]",
            "description": "Free text search",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "filter[assetable_types][]",
            "description": "Get only assets for these assetable types.",
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "Budget",
                "Supplier",
                "Contract",
                "DataSource",
                "FileTag",
                "Location",
                "Negotiation",
                "Program",
                "Opportunity",
                "Program",
                "Task",
                "User"
              ]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "filter[assetable_ids][]",
            "description": "Get only assets for these assetable ids.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "filter[created_at_after]",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "filter[created_at_before]",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "filter[updated_at_after]",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "filter[updated_at_before]",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/data_wrapper_35974500"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "405": {
            "description": "Method not allowed",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "408": {
            "description": "Request timeout",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          }
        },
        "tags": [
          "assets"
        ],
        "operationId": "getAssets"
      }
    },
    "/assets/{id}": {
      "get": {
        "description": "Show an Asset",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Access Token type and value",
            "type": "string",
            "required": true
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Request Content Type",
            "type": "string",
            "enum": [
              "application/json",
              "application/x-www-form-urlencoded",
              "multipart/form-data"
            ],
            "required": true
          },
          {
            "in": "header",
            "name": "Accept",
            "description": "Requested Content Type",
            "type": "string",
            "default": "application/json",
            "enum": [
              "application/json",
              "application/xml"
            ],
            "required": false
          },
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "format": "int32",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/data_wrapper_35974520"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "405": {
            "description": "Method not allowed",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "408": {
            "description": "Request timeout",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          }
        },
        "tags": [
          "assets"
        ],
        "operationId": "getAssetsId"
      }
    },
    "/suppliers": {
      "post": {
        "summary": "Create a Supplier",
        "description": "",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Access Token type and value",
            "type": "string",
            "required": true
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Request Content Type",
            "type": "string",
            "enum": [
              "application/json",
              "application/x-www-form-urlencoded",
              "multipart/form-data"
            ],
            "required": true
          },
          {
            "in": "header",
            "name": "Accept",
            "description": "Requested Content Type",
            "type": "string",
            "default": "application/json",
            "enum": [
              "application/json",
              "application/xml"
            ],
            "required": false
          },
          {
            "name": "postSuppliers",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/postSuppliers"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/data_wrapper_35974540"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "405": {
            "description": "Method not allowed",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "408": {
            "description": "Request timeout",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          }
        },
        "tags": [
          "suppliers"
        ],
        "operationId": "postSuppliers"
      },
      "patch": {
        "summary": "Create/update a batch of Suppliers",
        "description": "In the case of an update, it will only update missing attributes (soft update).",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Access Token type and value",
            "type": "string",
            "required": true
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Request Content Type",
            "type": "string",
            "enum": [
              "application/json",
              "application/x-www-form-urlencoded",
              "multipart/form-data"
            ],
            "required": true
          },
          {
            "in": "header",
            "name": "Accept",
            "description": "Requested Content Type",
            "type": "string",
            "default": "application/json",
            "enum": [
              "application/json",
              "application/xml"
            ],
            "required": false
          },
          {
            "name": "patchSuppliers",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/patchSuppliers"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/data_wrapper_35974560"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_SupplierBatchError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "405": {
            "description": "Method not allowed",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "408": {
            "description": "Request timeout",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          }
        },
        "tags": [
          "suppliers"
        ],
        "operationId": "patchSuppliers"
      },
      "get": {
        "summary": "List Suppliers",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Access Token type and value",
            "type": "string",
            "required": true
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Request Content Type",
            "type": "string",
            "enum": [
              "application/json",
              "application/x-www-form-urlencoded",
              "multipart/form-data"
            ],
            "required": true
          },
          {
            "in": "header",
            "name": "Accept",
            "description": "Requested Content Type",
            "type": "string",
            "default": "application/json",
            "enum": [
              "application/json",
              "application/xml"
            ],
            "required": false
          },
          {
            "in": "query",
            "name": "policy[mode]",
            "description": "Policy mode",
            "type": "string",
            "enum": [
              "read",
              "write"
            ],
            "required": false
          },
          {
            "in": "query",
            "name": "page[number]",
            "description": "Page number",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "page[size]",
            "description": "Page size",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "filter[q]",
            "description": "Free text search",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "filter[created_at_after]",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "filter[created_at_before]",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "filter[updated_at_after]",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "filter[updated_at_before]",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "sort[]",
            "description": "Sorting options, comma separated values (ex: \\\"&sort=-updated_at,+name\\\")",
            "type": "array",
            "items": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/data_wrapper_35974580"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "405": {
            "description": "Method not allowed",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "408": {
            "description": "Request timeout",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          }
        },
        "tags": [
          "suppliers"
        ],
        "operationId": "getSuppliers"
      }
    },
    "/suppliers/{supplier_id}": {
      "get": {
        "summary": "Show a Supplier",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Access Token type and value",
            "type": "string",
            "required": true
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Request Content Type",
            "type": "string",
            "enum": [
              "application/json",
              "application/x-www-form-urlencoded",
              "multipart/form-data"
            ],
            "required": true
          },
          {
            "in": "header",
            "name": "Accept",
            "description": "Requested Content Type",
            "type": "string",
            "default": "application/json",
            "enum": [
              "application/json",
              "application/xml"
            ],
            "required": false
          },
          {
            "in": "path",
            "name": "supplier_id",
            "type": "integer",
            "format": "int32",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/data_wrapper_35974600"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "405": {
            "description": "Method not allowed",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "408": {
            "description": "Request timeout",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          }
        },
        "tags": [
          "suppliers"
        ],
        "operationId": "getSuppliersSupplierId"
      },
      "put": {
        "summary": "Update a Supplier",
        "description": "Full object is required, every missing attribute will be considered null",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Access Token type and value",
            "type": "string",
            "required": true
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Request Content Type",
            "type": "string",
            "enum": [
              "application/json",
              "application/x-www-form-urlencoded",
              "multipart/form-data"
            ],
            "required": true
          },
          {
            "in": "header",
            "name": "Accept",
            "description": "Requested Content Type",
            "type": "string",
            "default": "application/json",
            "enum": [
              "application/json",
              "application/xml"
            ],
            "required": false
          },
          {
            "in": "path",
            "name": "supplier_id",
            "type": "integer",
            "format": "int32",
            "required": true
          },
          {
            "name": "putSuppliersSupplierId",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/putSuppliersSupplierId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated successfully",
            "schema": {
              "$ref": "#/definitions/data_wrapper_35974620"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "405": {
            "description": "Method not allowed",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "408": {
            "description": "Request timeout",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          }
        },
        "tags": [
          "suppliers"
        ],
        "operationId": "putSuppliersSupplierId"
      }
    },
    "/budgets": {
      "get": {
        "description": "List Projects",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Access Token type and value",
            "type": "string",
            "required": true
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Request Content Type",
            "type": "string",
            "enum": [
              "application/json",
              "application/x-www-form-urlencoded",
              "multipart/form-data"
            ],
            "required": true
          },
          {
            "in": "header",
            "name": "Accept",
            "description": "Requested Content Type",
            "type": "string",
            "default": "application/json",
            "enum": [
              "application/json",
              "application/xml"
            ],
            "required": false
          },
          {
            "in": "query",
            "name": "policy[mode]",
            "description": "Policy mode",
            "type": "string",
            "enum": [
              "read",
              "write"
            ],
            "required": false
          },
          {
            "in": "query",
            "name": "page[number]",
            "description": "Page number",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "page[size]",
            "description": "Page size",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "filter[q]",
            "description": "Free text search",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "filter[created_at_after]",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "filter[created_at_before]",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "filter[updated_at_after]",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "filter[updated_at_before]",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "sort[]",
            "description": "Sorting options, comma separated values (ex: \\\"&sort=-updated_at,+name\\\")",
            "type": "array",
            "items": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/data_wrapper_35974640"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "405": {
            "description": "Method not allowed",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "408": {
            "description": "Request timeout",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          }
        },
        "tags": [
          "budgets"
        ],
        "operationId": "getBudgets"
      }
    },
    "/budgets/{budget_id}": {
      "get": {
        "description": "Show Project",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Access Token type and value",
            "type": "string",
            "required": true
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Request Content Type",
            "type": "string",
            "enum": [
              "application/json",
              "application/x-www-form-urlencoded",
              "multipart/form-data"
            ],
            "required": true
          },
          {
            "in": "header",
            "name": "Accept",
            "description": "Requested Content Type",
            "type": "string",
            "default": "application/json",
            "enum": [
              "application/json",
              "application/xml"
            ],
            "required": false
          },
          {
            "in": "path",
            "name": "budget_id",
            "description": "Project ID",
            "type": "integer",
            "format": "int32",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/data_wrapper_35974660"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "405": {
            "description": "Method not allowed",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "408": {
            "description": "Request timeout",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          }
        },
        "tags": [
          "budgets"
        ],
        "operationId": "getBudgetsBudgetId"
      }
    },
    "/budgets/{budget_id}/silex/events": {
      "post": {
        "summary": "Create an external Event for Silex",
        "description": "Create a third-party record",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Access Token type and value",
            "type": "string",
            "required": true
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Request Content Type",
            "type": "string",
            "enum": [
              "application/json",
              "application/x-www-form-urlencoded",
              "multipart/form-data"
            ],
            "required": true
          },
          {
            "in": "header",
            "name": "Accept",
            "description": "Requested Content Type",
            "type": "string",
            "default": "application/json",
            "enum": [
              "application/json",
              "application/xml"
            ],
            "required": false
          },
          {
            "in": "path",
            "name": "budget_id",
            "description": "Project ID",
            "type": "integer",
            "format": "int32",
            "required": true
          },
          {
            "name": "postBudgetsBudgetIdSilexEvents",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/postBudgetsBudgetIdSilexEvents"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/data_wrapper_35974680"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "405": {
            "description": "Method not allowed",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "408": {
            "description": "Request timeout",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          }
        },
        "tags": [
          "budgets"
        ],
        "operationId": "postBudgetsBudgetIdSilexEvents"
      }
    },
    "/budgets/{budget_id}/silex/events/{event_id}": {
      "post": {
        "summary": "Update an external Event for Silex",
        "description": "Update an existing third-party record",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Access Token type and value",
            "type": "string",
            "required": true
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Request Content Type",
            "type": "string",
            "enum": [
              "application/json",
              "application/x-www-form-urlencoded",
              "multipart/form-data"
            ],
            "required": true
          },
          {
            "in": "header",
            "name": "Accept",
            "description": "Requested Content Type",
            "type": "string",
            "default": "application/json",
            "enum": [
              "application/json",
              "application/xml"
            ],
            "required": false
          },
          {
            "in": "path",
            "name": "budget_id",
            "description": "Project ID",
            "type": "integer",
            "format": "int32",
            "required": true
          },
          {
            "in": "path",
            "name": "event_id",
            "type": "string",
            "required": true
          },
          {
            "name": "postBudgetsBudgetIdSilexEventsEventId",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/postBudgetsBudgetIdSilexEventsEventId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/data_wrapper_35974700"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "405": {
            "description": "Method not allowed",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "408": {
            "description": "Request timeout",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          }
        },
        "tags": [
          "budgets"
        ],
        "operationId": "postBudgetsBudgetIdSilexEventsEventId"
      },
      "delete": {
        "summary": "Delete an external Event for Silex",
        "description": "Delete an existing third-party record",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Access Token type and value",
            "type": "string",
            "required": true
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Request Content Type",
            "type": "string",
            "enum": [
              "application/json",
              "application/x-www-form-urlencoded",
              "multipart/form-data"
            ],
            "required": true
          },
          {
            "in": "header",
            "name": "Accept",
            "description": "Requested Content Type",
            "type": "string",
            "default": "application/json",
            "enum": [
              "application/json",
              "application/xml"
            ],
            "required": false
          },
          {
            "in": "path",
            "name": "budget_id",
            "description": "Project ID",
            "type": "integer",
            "format": "int32",
            "required": true
          },
          {
            "in": "path",
            "name": "event_id",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/data_wrapper_35974720"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "405": {
            "description": "Method not allowed",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "408": {
            "description": "Request timeout",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          }
        },
        "tags": [
          "budgets"
        ],
        "operationId": "deleteBudgetsBudgetIdSilexEventsEventId"
      }
    },
    "/budgets/{budget_id}/archlet/events": {
      "post": {
        "summary": "Create an external Event for Archlet",
        "description": "Create a third-party record",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Access Token type and value",
            "type": "string",
            "required": true
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Request Content Type",
            "type": "string",
            "enum": [
              "application/json",
              "application/x-www-form-urlencoded",
              "multipart/form-data"
            ],
            "required": true
          },
          {
            "in": "header",
            "name": "Accept",
            "description": "Requested Content Type",
            "type": "string",
            "default": "application/json",
            "enum": [
              "application/json",
              "application/xml"
            ],
            "required": false
          },
          {
            "in": "path",
            "name": "budget_id",
            "description": "Project ID",
            "type": "integer",
            "format": "int32",
            "required": true
          },
          {
            "name": "postBudgetsBudgetIdArchletEvents",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/postBudgetsBudgetIdArchletEvents"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/data_wrapper_35974740"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "405": {
            "description": "Method not allowed",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "408": {
            "description": "Request timeout",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          }
        },
        "tags": [
          "budgets"
        ],
        "operationId": "postBudgetsBudgetIdArchletEvents"
      }
    },
    "/budgets/{budget_id}/archlet/events/{event_id}": {
      "post": {
        "summary": "Update an external Event for Archlet",
        "description": "Update an existing third-party record",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Access Token type and value",
            "type": "string",
            "required": true
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Request Content Type",
            "type": "string",
            "enum": [
              "application/json",
              "application/x-www-form-urlencoded",
              "multipart/form-data"
            ],
            "required": true
          },
          {
            "in": "header",
            "name": "Accept",
            "description": "Requested Content Type",
            "type": "string",
            "default": "application/json",
            "enum": [
              "application/json",
              "application/xml"
            ],
            "required": false
          },
          {
            "in": "path",
            "name": "budget_id",
            "description": "Project ID",
            "type": "integer",
            "format": "int32",
            "required": true
          },
          {
            "in": "path",
            "name": "event_id",
            "type": "string",
            "required": true
          },
          {
            "name": "postBudgetsBudgetIdArchletEventsEventId",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/postBudgetsBudgetIdArchletEventsEventId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/data_wrapper_35974760"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "405": {
            "description": "Method not allowed",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "408": {
            "description": "Request timeout",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          }
        },
        "tags": [
          "budgets"
        ],
        "operationId": "postBudgetsBudgetIdArchletEventsEventId"
      },
      "delete": {
        "summary": "Delete an external Event for Archlet",
        "description": "Delete an existing third-party record",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Access Token type and value",
            "type": "string",
            "required": true
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Request Content Type",
            "type": "string",
            "enum": [
              "application/json",
              "application/x-www-form-urlencoded",
              "multipart/form-data"
            ],
            "required": true
          },
          {
            "in": "header",
            "name": "Accept",
            "description": "Requested Content Type",
            "type": "string",
            "default": "application/json",
            "enum": [
              "application/json",
              "application/xml"
            ],
            "required": false
          },
          {
            "in": "path",
            "name": "budget_id",
            "description": "Project ID",
            "type": "integer",
            "format": "int32",
            "required": true
          },
          {
            "in": "path",
            "name": "event_id",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/data_wrapper_35974780"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "405": {
            "description": "Method not allowed",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "408": {
            "description": "Request timeout",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          }
        },
        "tags": [
          "budgets"
        ],
        "operationId": "deleteBudgetsBudgetIdArchletEventsEventId"
      }
    },
    "/negotiations": {
      "post": {
        "summary": "Create a Savings Report",
        "description": "Create a Savings Report (Only draft creation is currently supported)",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Access Token type and value",
            "type": "string",
            "required": true
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Request Content Type",
            "type": "string",
            "enum": [
              "application/json",
              "application/x-www-form-urlencoded",
              "multipart/form-data"
            ],
            "required": true
          },
          {
            "in": "header",
            "name": "Accept",
            "description": "Requested Content Type",
            "type": "string",
            "default": "application/json",
            "enum": [
              "application/json",
              "application/xml"
            ],
            "required": false
          },
          {
            "name": "postNegotiations",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/postNegotiations"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/data_wrapper_35974800"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "405": {
            "description": "Method not allowed",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "408": {
            "description": "Request timeout",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          }
        },
        "tags": [
          "negotiations"
        ],
        "operationId": "postNegotiations"
      }
    },
    "/opportunities": {
      "get": {
        "description": "List Opportunities",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Access Token type and value",
            "type": "string",
            "required": true
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Request Content Type",
            "type": "string",
            "enum": [
              "application/json",
              "application/x-www-form-urlencoded",
              "multipart/form-data"
            ],
            "required": true
          },
          {
            "in": "header",
            "name": "Accept",
            "description": "Requested Content Type",
            "type": "string",
            "default": "application/json",
            "enum": [
              "application/json",
              "application/xml"
            ],
            "required": false
          },
          {
            "in": "query",
            "name": "policy[mode]",
            "description": "Policy mode",
            "type": "string",
            "enum": [
              "read",
              "write"
            ],
            "required": false
          },
          {
            "in": "query",
            "name": "page[number]",
            "description": "Page number",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "page[size]",
            "description": "Page size",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "filter[q]",
            "description": "Free text search",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "filter[created_at_after]",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "filter[created_at_before]",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "filter[updated_at_after]",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "filter[updated_at_before]",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "sort[]",
            "description": "Sorting options, comma separated values (ex: \\\"&sort=-updated_at,+name\\\")",
            "type": "array",
            "items": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/data_wrapper_35974820"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "405": {
            "description": "Method not allowed",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "408": {
            "description": "Request timeout",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          }
        },
        "tags": [
          "opportunities"
        ],
        "operationId": "getOpportunities"
      },
      "post": {
        "description": "Create an opportunity",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Access Token type and value",
            "type": "string",
            "required": true
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Request Content Type",
            "type": "string",
            "enum": [
              "application/json",
              "application/x-www-form-urlencoded",
              "multipart/form-data"
            ],
            "required": true
          },
          {
            "in": "header",
            "name": "Accept",
            "description": "Requested Content Type",
            "type": "string",
            "default": "application/json",
            "enum": [
              "application/json",
              "application/xml"
            ],
            "required": false
          },
          {
            "name": "postOpportunities",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/postOpportunities"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/data_wrapper_35974840"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "405": {
            "description": "Method not allowed",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "408": {
            "description": "Request timeout",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          }
        },
        "tags": [
          "opportunities"
        ],
        "operationId": "postOpportunities"
      }
    },
    "/opportunities/{opportunity_id}": {
      "get": {
        "description": "Show an Opportunity",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Access Token type and value",
            "type": "string",
            "required": true
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Request Content Type",
            "type": "string",
            "enum": [
              "application/json",
              "application/x-www-form-urlencoded",
              "multipart/form-data"
            ],
            "required": true
          },
          {
            "in": "header",
            "name": "Accept",
            "description": "Requested Content Type",
            "type": "string",
            "default": "application/json",
            "enum": [
              "application/json",
              "application/xml"
            ],
            "required": false
          },
          {
            "in": "path",
            "name": "opportunity_id",
            "type": "integer",
            "format": "int32",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/data_wrapper_35974860"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "405": {
            "description": "Method not allowed",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "408": {
            "description": "Request timeout",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          }
        },
        "tags": [
          "opportunities"
        ],
        "operationId": "getOpportunitiesOpportunityId"
      },
      "patch": {
        "description": "Update an opportunity",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Access Token type and value",
            "type": "string",
            "required": true
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Request Content Type",
            "type": "string",
            "enum": [
              "application/json",
              "application/x-www-form-urlencoded",
              "multipart/form-data"
            ],
            "required": true
          },
          {
            "in": "header",
            "name": "Accept",
            "description": "Requested Content Type",
            "type": "string",
            "default": "application/json",
            "enum": [
              "application/json",
              "application/xml"
            ],
            "required": false
          },
          {
            "in": "path",
            "name": "opportunity_id",
            "type": "integer",
            "format": "int32",
            "required": true
          },
          {
            "name": "patchOpportunitiesOpportunityId",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/patchOpportunitiesOpportunityId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/data_wrapper_35974880"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "405": {
            "description": "Method not allowed",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "408": {
            "description": "Request timeout",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          }
        },
        "tags": [
          "opportunities"
        ],
        "operationId": "patchOpportunitiesOpportunityId"
      }
    },
    "/widgets/supplier_summaries/{identifier_value}": {
      "get": {
        "summary": "Get Supplier Summary",
        "description": "Obtain a brief summary about a supplier.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Access Token type and value",
            "type": "string",
            "required": true
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Request Content Type",
            "type": "string",
            "enum": [
              "application/json",
              "application/x-www-form-urlencoded",
              "multipart/form-data"
            ],
            "required": true
          },
          {
            "in": "header",
            "name": "Accept",
            "description": "Requested Content Type",
            "type": "string",
            "default": "application/json",
            "enum": [
              "application/json",
              "application/xml"
            ],
            "required": false
          },
          {
            "in": "query",
            "name": "identifier_type",
            "description": "Supplier Identifier type",
            "type": "string",
            "default": "id",
            "enum": [
              "id",
              "external_identifier",
              "external_identifier_coupa",
              "vat_number",
              "legal_identifier",
              "duns_number",
              "reference_code",
              "universal_identifier"
            ],
            "required": false
          },
          {
            "in": "path",
            "name": "identifier_value",
            "description": "Supplier Identifier",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/data_wrapper_35974900"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "405": {
            "description": "Method not allowed",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "408": {
            "description": "Request timeout",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          }
        },
        "tags": [
          "widgets"
        ],
        "operationId": "getWidgetsSupplierSummariesIdentifierValue"
      }
    },
    "/widgets/phase_summaries": {
      "get": {
        "summary": "Get Phases Summary",
        "description": "Obtain a brief summary about phases.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Access Token type and value",
            "type": "string",
            "required": true
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Request Content Type",
            "type": "string",
            "enum": [
              "application/json",
              "application/x-www-form-urlencoded",
              "multipart/form-data"
            ],
            "required": true
          },
          {
            "in": "header",
            "name": "Accept",
            "description": "Requested Content Type",
            "type": "string",
            "default": "application/json",
            "enum": [
              "application/json",
              "application/xml"
            ],
            "required": false
          },
          {
            "in": "query",
            "name": "filter[q]",
            "description": "Free text search",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "filter[created_at_after]",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "filter[created_at_before]",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "filter[updated_at_after]",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "filter[updated_at_before]",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/data_wrapper_35974920"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "405": {
            "description": "Method not allowed",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "408": {
            "description": "Request timeout",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          }
        },
        "tags": [
          "widgets"
        ],
        "operationId": "getWidgetsPhaseSummaries"
      }
    },
    "/data_sources/templates": {
      "get": {
        "summary": "List data import templates",
        "description": "Retrieve the list of available data import templates with their type and columns.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Access Token type and value",
            "type": "string",
            "required": true
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Request Content Type",
            "type": "string",
            "enum": [
              "application/json",
              "application/x-www-form-urlencoded",
              "multipart/form-data"
            ],
            "required": true
          },
          {
            "in": "header",
            "name": "Accept",
            "description": "Requested Content Type",
            "type": "string",
            "default": "application/json",
            "enum": [
              "application/json",
              "application/xml"
            ],
            "required": false
          },
          {
            "in": "query",
            "name": "filter[q]",
            "description": "Free text search",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "filter[created_at_after]",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "filter[created_at_before]",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "filter[updated_at_after]",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "filter[updated_at_before]",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "page[number]",
            "description": "Page number",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "page[size]",
            "description": "Page size",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/data_wrapper_35974940"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "405": {
            "description": "Method not allowed",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "408": {
            "description": "Request timeout",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          }
        },
        "tags": [
          "data_sources"
        ],
        "operationId": "getDataSourcesTemplates"
      }
    },
    "/data_sources": {
      "post": {
        "summary": "Create data import",
        "description": "Import data in batch with the \"DataSource\" interface. The result of that endpoint is an array of batch import operations, depending on the maximum number of lines per template. The rate limit is 2 requests per 30-second interval.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Access Token type and value",
            "type": "string",
            "required": true
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Request Content Type",
            "type": "string",
            "enum": [
              "application/json",
              "application/x-www-form-urlencoded",
              "multipart/form-data"
            ],
            "required": true
          },
          {
            "in": "header",
            "name": "Accept",
            "description": "Requested Content Type",
            "type": "string",
            "default": "application/json",
            "enum": [
              "application/json",
              "application/xml"
            ],
            "required": false
          },
          {
            "in": "lol",
            "name": "data_source[data][]",
            "description": "A JSON array of representing the objects to be imported.\n\nThese must be structured the same way an import file is structured.\n\nYou can import as many item as you want as long as each key MUST have the same name as the column in the corresponding template.\n\nFor instance:\n```json\n {\n    \"data_source\": {\n        \"data_source_type\": \"Comment\",\n        \"data\": [\n            {\n                \"commentable/type\": \"Contract\",\n                \"commentable/key\": \"id\",\n                \"commentable/value\": \"46\",\n                \"comment\": \"Hello world\"\n            }\n        ]\n    }\n}\n```\n\nwill add a comment on the Contract with ID 46.\n",
            "type": "array",
            "items": {
              "type": "json"
            },
            "required": true
          },
          {
            "name": "postDataSources",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/postDataSources"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/data_wrapper_35974960"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "405": {
            "description": "Method not allowed",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "408": {
            "description": "Request timeout",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          }
        },
        "tags": [
          "data_sources"
        ],
        "operationId": "postDataSources"
      },
      "get": {
        "summary": "List data imports",
        "description": "Retrieve the history of data imports and their status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Access Token type and value",
            "type": "string",
            "required": true
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Request Content Type",
            "type": "string",
            "enum": [
              "application/json",
              "application/x-www-form-urlencoded",
              "multipart/form-data"
            ],
            "required": true
          },
          {
            "in": "header",
            "name": "Accept",
            "description": "Requested Content Type",
            "type": "string",
            "default": "application/json",
            "enum": [
              "application/json",
              "application/xml"
            ],
            "required": false
          },
          {
            "in": "query",
            "name": "sort[]",
            "description": "Sorting options, comma separated values (ex: \\\"&sort=-updated_at,+name\\\")",
            "type": "array",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page[number]",
            "description": "Page number",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "page[size]",
            "description": "Page size",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/data_wrapper_35974980"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "405": {
            "description": "Method not allowed",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "408": {
            "description": "Request timeout",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          }
        },
        "tags": [
          "data_sources"
        ],
        "operationId": "getDataSources"
      }
    },
    "/data_sources/{data_source_id}": {
      "get": {
        "summary": "Show data import details",
        "description": "Retrieve details and status of an import",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Access Token type and value",
            "type": "string",
            "required": true
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Request Content Type",
            "type": "string",
            "enum": [
              "application/json",
              "application/x-www-form-urlencoded",
              "multipart/form-data"
            ],
            "required": true
          },
          {
            "in": "header",
            "name": "Accept",
            "description": "Requested Content Type",
            "type": "string",
            "default": "application/json",
            "enum": [
              "application/json",
              "application/xml"
            ],
            "required": false
          },
          {
            "in": "path",
            "name": "data_source_id",
            "type": "integer",
            "format": "int32",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/data_wrapper_35975000"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "405": {
            "description": "Method not allowed",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "408": {
            "description": "Request timeout",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          }
        },
        "tags": [
          "data_sources"
        ],
        "operationId": "getDataSourcesDataSourceId"
      }
    },
    "/sessions/{id}": {
      "patch": {
        "summary": "Update Session",
        "description": "Interact with visitors' session (sign in, sign out, impersonation, etc.)",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Access Token type and value",
            "type": "string",
            "required": true
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Request Content Type",
            "type": "string",
            "enum": [
              "application/json",
              "application/x-www-form-urlencoded",
              "multipart/form-data"
            ],
            "required": true
          },
          {
            "in": "header",
            "name": "Accept",
            "description": "Requested Content Type",
            "type": "string",
            "default": "application/json",
            "enum": [
              "application/json",
              "application/xml"
            ],
            "required": false
          },
          {
            "in": "path",
            "name": "id",
            "type": "string",
            "required": true
          },
          {
            "name": "patchSessionsId",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/patchSessionsId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/data_wrapper_35975020"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "405": {
            "description": "Method not allowed",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "408": {
            "description": "Request timeout",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          }
        },
        "tags": [
          "sessions"
        ],
        "operationId": "patchSessionsId"
      }
    },
    "/contracts": {
      "get": {
        "description": "List Contracts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Access Token type and value",
            "type": "string",
            "required": true
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Request Content Type",
            "type": "string",
            "enum": [
              "application/json",
              "application/x-www-form-urlencoded",
              "multipart/form-data"
            ],
            "required": true
          },
          {
            "in": "header",
            "name": "Accept",
            "description": "Requested Content Type",
            "type": "string",
            "default": "application/json",
            "enum": [
              "application/json",
              "application/xml"
            ],
            "required": false
          },
          {
            "in": "query",
            "name": "policy[mode]",
            "description": "Policy mode",
            "type": "string",
            "enum": [
              "read",
              "write"
            ],
            "required": false
          },
          {
            "in": "query",
            "name": "page[number]",
            "description": "Page number",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "page[size]",
            "description": "Page size",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "filter[q]",
            "description": "Free text search",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "filter[created_at_after]",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "filter[created_at_before]",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "filter[updated_at_after]",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "filter[updated_at_before]",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "sort[]",
            "description": "Sorting options, comma separated values (ex: \\\"&sort=-updated_at,+name\\\")",
            "type": "array",
            "items": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/data_wrapper_35975040"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "405": {
            "description": "Method not allowed",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "408": {
            "description": "Request timeout",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          }
        },
        "tags": [
          "contracts"
        ],
        "operationId": "getContracts"
      }
    },
    "/contracts/{contract_id}": {
      "get": {
        "summary": "Show Contract",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Access Token type and value",
            "type": "string",
            "required": true
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Request Content Type",
            "type": "string",
            "enum": [
              "application/json",
              "application/x-www-form-urlencoded",
              "multipart/form-data"
            ],
            "required": true
          },
          {
            "in": "header",
            "name": "Accept",
            "description": "Requested Content Type",
            "type": "string",
            "default": "application/json",
            "enum": [
              "application/json",
              "application/xml"
            ],
            "required": false
          },
          {
            "in": "path",
            "name": "contract_id",
            "description": "Contract internal ID",
            "type": "integer",
            "format": "int32",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/data_wrapper_35975060"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "405": {
            "description": "Method not allowed",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "408": {
            "description": "Request timeout",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "429": {
            "description": "Too many requests",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Error"
            }
          }
        },
        "tags": [
          "contracts"
        ],
        "operationId": "getContractsContractId"
      }
    }
  },
  "definitions": {
    "PerAngustaV3_Entities_Error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "enum": [
                "00000",
                "00001",
                "00400",
                "00404",
                "00405",
                "00401",
                "01001",
                "01002",
                "01003",
                "01004",
                "01005",
                "01006",
                "01007",
                "01008",
                "01009",
                "01010",
                "01011",
                "01012",
                "01013",
                "01014",
                "02404",
                "10400",
                "10401",
                "10402",
                "10403",
                "10404",
                "10405",
                "20400",
                "30001",
                "99001",
                "40001",
                "40002",
                "50503",
                "50408",
                "50429",
                "50501",
                "50505"
              ],
              "example": "10101",
              "description": "Error code"
            },
            "message": {
              "type": "string",
              "example": "Error message",
              "description": "Error message"
            }
          },
          "required": [
            "code",
            "message"
          ]
        }
      },
      "required": [
        "error"
      ],
      "description": "PerAngustaV3_Entities_Error model"
    },
    "data_wrapper_35974500": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerAngustaV3_Entities_Asset"
          }
        }
      },
      "description": "data_wrapper_35974500 model"
    },
    "PerAngustaV3_Entities_Asset": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "Internal asset ID"
        },
        "type": {
          "type": "string",
          "enum": [
            "Asset"
          ],
          "example": "Asset",
          "description": "Object type"
        },
        "attributes": {
          "type": "object",
          "properties": {
            "assetable_type": {
              "type": "string",
              "example": "Budget",
              "description": "Document's assetable object type"
            },
            "assetable_id": {
              "type": "integer",
              "format": "int32",
              "example": "1337",
              "description": "Document's assetable object id"
            },
            "assets_count": {
              "type": "integer",
              "format": "int32",
              "example": 5,
              "description": "Assets count"
            },
            "document_file_name": {
              "type": "string",
              "example": "Screenshot_2023-03-16_at_16.49.35.png",
              "description": "Document's file name"
            },
            "document_file_description": {
              "type": "string",
              "example": "Screenshot_2023-03-16_at_16.49.35.png",
              "description": "Document's file description"
            },
            "document_file_size": {
              "type": "string",
              "example": 204062,
              "description": "Document's file size"
            },
            "document_content_type": {
              "type": "string",
              "example": "image/png",
              "description": "Document's content type"
            },
            "document_url": {
              "type": "string",
              "description": "Document's file url"
            },
            "download_url": {
              "type": "string",
              "description": "Document's download url. Expiring time: 3600 seconds."
            },
            "file_tag": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Light_FileTag",
              "description": "File tag the asset belongs to"
            },
            "indexing_message": {
              "type": "string",
              "example": "Not supported format.",
              "description": "Document's indexing message"
            },
            "indexing_state": {
              "type": "string",
              "example": "unindexed",
              "description": "Document's indexing state"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "example": "2017-12-13T11:10:35.898Z",
              "description": "Creation date"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "example": "2017-12-13T11:10:35.898Z",
              "description": "Last object update date"
            }
          },
          "required": [
            "assetable_type",
            "assetable_id",
            "assets_count",
            "document_file_name",
            "document_file_description",
            "document_file_size",
            "document_content_type",
            "document_url",
            "download_url",
            "indexing_message",
            "indexing_state",
            "created_at",
            "updated_at"
          ],
          "description": "Object attributes"
        }
      },
      "required": [
        "id",
        "type",
        "attributes"
      ]
    },
    "PerAngustaV3_Entities_Light_FileTag": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "Internal file tag ID"
        },
        "type": {
          "type": "string",
          "enum": [
            "FileTag"
          ],
          "example": "Asset",
          "description": "Object type"
        },
        "attributes": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "Analyse",
              "description": "Name"
            },
            "created_at": {
              "type": "string",
              "example": "2017-12-13T11:10:35.898Z",
              "description": "Creation date"
            },
            "updated_at": {
              "type": "string",
              "example": "2017-12-13T11:10:35.898Z",
              "description": "Last object update date"
            }
          },
          "required": [
            "name",
            "created_at",
            "updated_at"
          ],
          "description": "Object attributes"
        }
      },
      "required": [
        "id",
        "type",
        "attributes"
      ]
    },
    "data_wrapper_35974520": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/PerAngustaV3_Entities_Asset"
        }
      },
      "description": "data_wrapper_35974520 model"
    },
    "postSuppliers": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "description": "In case of authenticated End-User, do not specify this parameter\\\n                                                                    In case of authenticated Client, specify End-User’s email"
        },
        "supplier": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the Supplier"
            },
            "country_code": {
              "type": "string",
              "description": "Country code following ISO 3166-1 alpha-2"
            },
            "attach_to_budget_id": {
              "type": "integer",
              "format": "int32",
              "description": "Budget ID to which you would like to associate the supplier"
            },
            "is_archived": {
              "type": "boolean",
              "description": "Whether the supplier is archived"
            },
            "legal_identifier": {
              "type": "string",
              "description": "Legal identifier"
            },
            "vat_number": {
              "type": "string",
              "description": "VAT number"
            },
            "duns_number": {
              "type": "string",
              "description": "DUNS number"
            },
            "external_identifier": {
              "type": "string",
              "description": "External identifier"
            },
            "external_identifier_silex": {
              "type": "string",
              "description": "External identifier for Silex"
            },
            "external_identifier_coupa": {
              "type": "string",
              "description": "External identifier for Coupa"
            },
            "external_identifier_corcentric": {
              "type": "string",
              "description": "External identifier for Corcentric"
            },
            "universal_identifier": {
              "type": "string",
              "description": "Universal identifier"
            },
            "address_line_1": {
              "type": "string",
              "description": "Address line 1"
            },
            "address_line_2": {
              "type": "string",
              "description": "Address line 2"
            },
            "address_line_3": {
              "type": "string",
              "description": "Address line 3"
            },
            "region": {
              "type": "string",
              "description": "Region part of the address"
            },
            "zip": {
              "type": "string",
              "description": "Zip code"
            },
            "city": {
              "type": "string",
              "description": "City"
            },
            "telephone": {
              "type": "string",
              "description": "Phone number"
            },
            "fax": {
              "type": "string",
              "description": "Fax number"
            },
            "email": {
              "type": "string",
              "description": "Email address"
            },
            "url": {
              "type": "string",
              "description": "Website URL"
            },
            "description": {
              "type": "string",
              "description": "Description"
            },
            "custom_fields": {
              "type": "Object",
              "description": "Axes (or Custom Fields) configured on this object as a key value pair:\n- The key being the ID or the name of the axis (as a 'String')\n- The value being the value OR the id of the available option for this axis (if it's of type 'select')\n\nExample with IDs: `{ \"1\": \"Value for Axis 1\", \"2\": \"Value for Axis 2\" }`\n\nExample with names: `{ \"Axis Name 1\": \"Value 1\", \"Axis Name 2\": \"Value 2\" }`\n"
            }
          },
          "required": [
            "name",
            "country_code"
          ]
        }
      },
      "required": [
        "supplier"
      ],
      "description": "Create a Supplier"
    },
    "data_wrapper_35974540": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/PerAngustaV3_Entities_Supplier"
        }
      },
      "description": "data_wrapper_35974540 model"
    },
    "PerAngustaV3_Entities_Supplier": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "Internal supplier's ID"
        },
        "type": {
          "type": "string",
          "enum": [
            "Supplier"
          ],
          "example": "Supplier",
          "description": "Object type"
        },
        "attributes": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "Wayne Corp.",
              "description": "Name"
            },
            "country_code": {
              "type": "string",
              "example": "FR",
              "description": "Country code following ISO 3166-1 alpha-2"
            },
            "created_at": {
              "type": "string",
              "example": "2017-12-13T11:10:35.898Z",
              "description": "Creation date"
            },
            "updated_at": {
              "type": "string",
              "example": "2017-12-13T11:10:35.898Z",
              "description": "Last object update date"
            },
            "reference_code": {
              "type": "string",
              "example": "ABCD1234",
              "description": "Extra internal identifier"
            },
            "state": {
              "type": "string",
              "enum": [
                "draft",
                "completed",
                "waiting_for_approval",
                "persisted_draft"
              ],
              "example": "completed",
              "description": "State of the object"
            },
            "legal_identifier": {
              "type": "string",
              "example": "ABCD1234",
              "description": "Legal identifier"
            },
            "vat_number": {
              "type": "string",
              "example": "ABCD1234",
              "description": "Tax ID"
            },
            "duns_number": {
              "type": "string",
              "example": "123456789",
              "description": "DUNS number"
            },
            "external_identifier": {
              "type": "string",
              "example": "ABCD1234",
              "description": "External identifier"
            },
            "external_identifier_silex": {
              "type": "string",
              "example": "ABCD1234",
              "description": "External identifier for Silex"
            },
            "universal_identifier": {
              "type": "string",
              "example": "ABCD1234",
              "description": "Universal identifier (SpendHQ)"
            },
            "address_line_1": {
              "type": "string",
              "example": "1 Long Street",
              "description": "Address line 1"
            },
            "address_line_2": {
              "type": "string",
              "example": "Second part of the address",
              "description": "Address line 2"
            },
            "address_line_3": {
              "type": "string",
              "example": "Third part of the address",
              "description": "Address line 3"
            },
            "region": {
              "type": "string",
              "example": "Auvergne Rhône-Alpes",
              "description": "Region part of the address"
            },
            "zip": {
              "type": "string",
              "example": "69000",
              "description": "Zip code"
            },
            "city": {
              "type": "string",
              "example": "Lyon",
              "description": "City"
            },
            "telephone": {
              "type": "string",
              "example": "0102030405",
              "description": "Phone number"
            },
            "fax": {
              "type": "string",
              "example": "0102030405",
              "description": "Fax number"
            },
            "email": {
              "type": "string",
              "example": "contact@waynecorp.com",
              "description": "Email address"
            },
            "url": {
              "type": "string",
              "example": "https://www.waynecorp.com",
              "description": "Website URL"
            },
            "description": {
              "type": "string",
              "example": "Wayne corp. is a nice company.",
              "description": "Description"
            },
            "custom_fields": {
              "type": "Object",
              "example": {
                "15": {
                  "value": 15000,
                  "field_type": "text",
                  "field_name": "Previous Year Spend",
                  "mandatory": false,
                  "is_archived": false
                },
                "16": {
                  "value": 28,
                  "field_type": "select",
                  "field_name": "Selectable field",
                  "value_human": "Option X",
                  "mandatory": false,
                  "is_archived": false
                }
              },
              "description": "Every analytical axis (or custom field) configured on this model will appear as a key value pair here.\n\nThe key being the 'id' of the applicable axis (as a String).\nThe value being an Object containing the following fields:\n* `value`       (String) contains either the content of the custom_field, or the 'id' of the available option (if the type is 'select').\n* `field_type`  (String) contains the type of the custom_field (numeric, date, text, string, select, select_multiple) configured in the axis.\n* `field_name`  (String) is a human readable version of the name of the custom field.\n* `mandatory`   (Boolean) defines if the axis is mandatory.\n* `is_archived` (Boolean) tells you if the available option is archived (boolean) (only if the field_type is 'select').\n* `value_human` (String) is a human readable version of the selected option (only if the field_type is 'select').\n"
            },
            "scoring": {
              "type": "Object",
              "example": {
                "darkbeam": {
                  "score": "8",
                  "updated_on": "2018-01-01"
                },
                "dun_and_bradstreet": {
                  "score": "15",
                  "updated_on": "2021-09-11"
                },
                "creditsafe": {
                  "score": "B",
                  "updated_on": "2019-12-06"
                },
                "ecovadis": {
                  "score": "20.00",
                  "env": "56.00",
                  "lab": "17.00",
                  "fbp": "99.00",
                  "sup": "12.00",
                  "updated_on": "2022-08-19"
                },
                "provigis": {
                  "score": "invalid"
                },
                "coupa": {
                  "score": "OK"
                },
                "rgpd_check": {
                  "score": "70"
                }
              },
              "description": "Third-party supplier scores.\n\nAltares\n* `score` (String) Risk level\n* `updated_on` (String) Last refresh\n\ne-Attestations (WS)\n* `score` (String) Score\n* `updated_on` (String) Last refresh\n\nDarkbeam\n* `score` (String) Score\n* `updated_on` (String) Last refresh\n\nDun & Bradstreet\n* `score` (String) Class score\n* `updated_on` (String) Last refresh\n\nCreditsafe\n* `score` (String) Score\n* `updated_on` (String) Last refresh\n\nEcoVadis\n* `score` (String) Global Score (0-100)\n* `env` (String) Environment Score (0-100)\n* `lab` (String) Labor Practices & Human Rights Score (0-100)\n* `fbp` (String) Fair Business Practices Score (0-100)\n* `sup` (String) Sustainable Procurement Score (0-100)\n* `updated_on` (String) Last refresh\n\nProvigis\n* `score` (String) Validity\n\nCoupa Suppliers\n* `score` (String) Status\n\nRGPD Check\n* `score` (String) Grade\n"
            }
          },
          "required": [
            "name",
            "country_code",
            "created_at",
            "updated_at",
            "reference_code",
            "state"
          ],
          "description": "Object attributes"
        }
      },
      "required": [
        "id",
        "type",
        "attributes"
      ]
    },
    "patchSuppliers": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "description": "In case of authenticated End-User, do not specify this parameter\\\n                                                                    In case of authenticated Client, specify End-User’s email"
        }
      },
      "description": "Create/update a batch of Suppliers"
    },
    "data_wrapper_35974560": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerAngustaV3_Entities_Supplier"
          }
        }
      },
      "description": "data_wrapper_35974560 model"
    },
    "PerAngustaV3_Entities_SupplierBatchError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "example": "00000",
              "description": "Error code"
            },
            "message": {
              "type": "string",
              "example": "An error occurred while creating suppliers",
              "description": "Error message"
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "legal_identifier": {
                    "type": "string",
                    "example": "ABCD1234",
                    "description": "Unique supplier identifier sent on request"
                  },
                  "error_messages": {
                    "type": "Object",
                    "example": {
                      "country_code": [
                        "must be valid, 2-letters, ISO3166 code."
                      ]
                    },
                    "description": "Keys are the attributes where the error occurred, values are arrays of strings describing the error"
                  }
                },
                "required": [
                  "legal_identifier",
                  "error_messages"
                ]
              }
            }
          },
          "required": [
            "code",
            "message",
            "errors"
          ]
        }
      },
      "required": [
        "error"
      ],
      "description": "PerAngustaV3_Entities_SupplierBatchError model"
    },
    "data_wrapper_35974580": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerAngustaV3_Entities_Supplier"
          }
        }
      },
      "description": "data_wrapper_35974580 model"
    },
    "data_wrapper_35974600": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/PerAngustaV3_Entities_Supplier"
        }
      },
      "description": "data_wrapper_35974600 model"
    },
    "putSuppliersSupplierId": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "description": "In case of authenticated End-User, do not specify this parameter\\\n                                                                      In case of authenticated Client, specify End-User’s email"
        },
        "supplier": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the Supplier"
            },
            "country_code": {
              "type": "string",
              "description": "Country code following ISO 3166-1 alpha-2"
            },
            "is_archived": {
              "type": "boolean",
              "description": "Whether the supplier is archived"
            },
            "legal_identifier": {
              "type": "string",
              "description": "Legal identifier"
            },
            "vat_number": {
              "type": "string",
              "description": "VAT number"
            },
            "duns_number": {
              "type": "string",
              "description": "DUNS number"
            },
            "external_identifier": {
              "type": "string",
              "description": "External identifier"
            },
            "external_identifier_silex": {
              "type": "string",
              "description": "External identifier for Silex"
            },
            "external_identifier_coupa": {
              "type": "string",
              "description": "External identifier for Coupa"
            },
            "external_identifier_corcentric": {
              "type": "string",
              "description": "External identifier for Corcentric"
            },
            "universal_identifier": {
              "type": "string",
              "description": "Universal identifier"
            },
            "address_line_1": {
              "type": "string",
              "description": "Address line 1"
            },
            "address_line_2": {
              "type": "string",
              "description": "Address line 2"
            },
            "address_line_3": {
              "type": "string",
              "description": "Address line 3"
            },
            "region": {
              "type": "string",
              "description": "Region part of the address"
            },
            "zip": {
              "type": "string",
              "description": "Zip code"
            },
            "city": {
              "type": "string",
              "description": "City"
            },
            "telephone": {
              "type": "string",
              "description": "Phone number"
            },
            "fax": {
              "type": "string",
              "description": "Fax number"
            },
            "email": {
              "type": "string",
              "description": "Email address"
            },
            "url": {
              "type": "string",
              "description": "Website URL"
            },
            "description": {
              "type": "string",
              "description": "Description"
            },
            "custom_fields": {
              "type": "Object",
              "description": "Axes (or Custom Fields) configured on this object as a key value pair:\n- The key being the ID or the name of the axis (as a 'String')\n- The value being the value OR the id of the available option for this axis (if it's of type 'select')\n\nExample with IDs: `{ \"1\": \"Value for Axis 1\", \"2\": \"Value for Axis 2\" }`\n\nExample with names: `{ \"Axis Name 1\": \"Value 1\", \"Axis Name 2\": \"Value 2\" }`\n"
            }
          }
        }
      },
      "required": [
        "supplier"
      ],
      "description": "Update a Supplier"
    },
    "data_wrapper_35974620": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/PerAngustaV3_Entities_Supplier"
        }
      },
      "description": "data_wrapper_35974620 model"
    },
    "data_wrapper_35974640": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerAngustaV3_Entities_Budget"
          }
        }
      },
      "description": "data_wrapper_35974640 model"
    },
    "PerAngustaV3_Entities_Budget": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "Internal ID"
        },
        "type": {
          "type": "string",
          "example": "Budget",
          "description": "Type"
        },
        "attributes": {
          "type": "object",
          "properties": {
            "action_plan_budget_year": {
              "type": "integer",
              "format": "int32",
              "example": "2023",
              "description": "Action plan"
            },
            "action_plan_name": {
              "type": "string",
              "example": "Q1 2023",
              "description": "Name of the action plan"
            },
            "actiontype": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Light_Actiontype",
              "description": "Action type the project belongs to"
            },
            "amount_after_base": {
              "type": "number",
              "format": "float",
              "example": "700",
              "description": "Spend after nego. (base currency)"
            },
            "amount_before_base": {
              "type": "number",
              "format": "float",
              "example": "1000",
              "description": "Baseline (base currency)"
            },
            "category": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Light_Category",
              "description": "Category the project belongs to"
            },
            "country": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Light_Country",
              "example": "France",
              "description": "Country name"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "example": "2023-01-30T10:00:00.770Z",
              "description": "Created at"
            },
            "creator": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Light_User",
              "example": "1",
              "description": "Creator ID"
            },
            "currency": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Light_Currency",
              "example": "EUR",
              "description": "Currency ISO Code"
            },
            "custom_fields": {
              "type": "Object",
              "example": {
                "15": {
                  "value": 15000,
                  "field_type": "text",
                  "field_name": "Previous Year Spend",
                  "mandatory": false,
                  "is_archived": false
                },
                "16": {
                  "value": 28,
                  "field_type": "select",
                  "field_name": "Selectable field",
                  "value_human": "Option X",
                  "mandatory": false,
                  "is_archived": false
                }
              },
              "description": "Every analytical axis (or custom field) configured on this model will appear as a key value pair here.\n\nThe key being the 'id' of the applicable axis (as a String).\nThe value being an Object containing the following fields:\n* `value`       (String) contains either the content of the custom_field, or the 'id' of the available option (if the type is 'select').\n* `field_type`  (String) contains the type of the custom_field (numeric, date, text, string, select, select_multiple) configured in the axis.\n* `field_name`  (String) is a human readable version of the name of the custom field.\n* `mandatory`   (Boolean) defines if the axis is mandatory.\n* `is_archived` (Boolean) tells you if the available option is archived (boolean) (only if the field_type is 'select').\n* `value_human` (String) is a human readable version of the selected option (only if the field_type is 'select').\n"
            },
            "expected_savings_end_date": {
              "type": "string",
              "format": "date",
              "example": "2023-01-01",
              "description": "Expecting saving end date"
            },
            "expected_savings_start_date": {
              "type": "string",
              "format": "date",
              "example": "2023-01-01",
              "description": "Expecting saving start date"
            },
            "external_id": {
              "type": "string",
              "example": "A1234",
              "description": "External ID"
            },
            "name": {
              "type": "string",
              "example": "Allocations",
              "description": "Name"
            },
            "negotiation_end": {
              "type": "string",
              "format": "date",
              "example": "2023-01-01",
              "description": "Project end date"
            },
            "negotiation_start": {
              "type": "string",
              "format": "date",
              "example": "2023-01-01",
              "description": "Project start date"
            },
            "pipeline_amount_after_base": {
              "type": "number",
              "format": "float",
              "example": "600",
              "description": "Forecast Spend after nego. (base currency)"
            },
            "pipeline_amount_before_base": {
              "type": "number",
              "format": "float",
              "example": "1100",
              "description": "Forecast Baseline (base currency)"
            },
            "pipeline_expected_savings_end_date": {
              "type": "string",
              "format": "date",
              "example": "2023-01-01",
              "description": "Revised expecting saving end date"
            },
            "pipeline_expected_savings_start_date": {
              "type": "string",
              "format": "date",
              "example": "2023-01-01",
              "description": "Revised expecting saving start date"
            },
            "pipeline_negotiation_end": {
              "type": "string",
              "format": "date",
              "example": "2023-01-01",
              "description": "Revised project end date"
            },
            "pipeline_negotiation_start": {
              "type": "string",
              "format": "date",
              "example": "2023-01-01",
              "description": "Revised project start date"
            },
            "pipeline_savings_base": {
              "type": "number",
              "format": "float",
              "example": "500",
              "description": "Forecast savings (base currency)"
            },
            "program": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Light_Program",
              "example": "Test Program",
              "description": "Program name"
            },
            "reference_code": {
              "type": "string",
              "example": "123",
              "description": "Reference code"
            },
            "savings_base": {
              "type": "number",
              "format": "float",
              "example": "300",
              "description": "Savings (base currency)"
            },
            "status": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Light_Status",
              "example": "1",
              "description": "Status ID"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "example": "2023-01-30T10:30:00.770Z",
              "description": "Updated at"
            }
          },
          "required": [
            "amount_after_base",
            "amount_before_base",
            "created_at",
            "creator",
            "name",
            "negotiation_end",
            "negotiation_start",
            "savings_base",
            "updated_at"
          ],
          "description": "Object attributes"
        },
        "name": {
          "type": "string",
          "example": "Allocations",
          "description": "Name"
        }
      },
      "required": [
        "id",
        "type",
        "attributes",
        "name"
      ]
    },
    "PerAngustaV3_Entities_Light_Actiontype": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "Internal Actiontype ID"
        },
        "name": {
          "type": "string",
          "example": "Inflation",
          "description": "Name"
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "PerAngustaV3_Entities_Light_Category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "ID"
        },
        "name": {
          "type": "string",
          "example": "Permanent Staffing category",
          "description": "Name"
        },
        "external_identifier": {
          "type": "string",
          "example": "HR001",
          "description": "External Identifier"
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "PerAngustaV3_Entities_Light_Country": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "ID"
        },
        "name": {
          "type": "string",
          "example": "France",
          "description": "Name"
        },
        "country_code": {
          "type": "string",
          "example": "fr",
          "description": "Country code"
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "PerAngustaV3_Entities_Light_User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "ID"
        },
        "full_name": {
          "type": "string",
          "example": "Marie Dupont",
          "description": "Full Name"
        },
        "email": {
          "type": "string",
          "example": "test@mail.com",
          "description": "Email"
        }
      },
      "required": [
        "id"
      ]
    },
    "PerAngustaV3_Entities_Light_Currency": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "ID"
        },
        "name": {
          "type": "string",
          "example": "Euro",
          "description": "Name"
        },
        "iso_code": {
          "type": "string",
          "example": "EUR",
          "description": "ISO Code"
        }
      },
      "required": [
        "id",
        "name",
        "iso_code"
      ]
    },
    "PerAngustaV3_Entities_Light_Program": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "Internal ID"
        },
        "name": {
          "type": "string",
          "example": "My Project",
          "description": "Name"
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "PerAngustaV3_Entities_Light_Status": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "Internal Status ID"
        },
        "name": {
          "type": "string",
          "example": "Not launched",
          "description": "Status name"
        },
        "phase_id": {
          "type": "string",
          "example": "1",
          "description": "Phase id"
        },
        "phase_name": {
          "type": "string",
          "example": "Planned",
          "description": "Phase name"
        }
      },
      "required": [
        "id"
      ]
    },
    "data_wrapper_35974660": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/PerAngustaV3_Entities_Budget"
        }
      },
      "description": "data_wrapper_35974660 model"
    },
    "postBudgetsBudgetIdSilexEvents": {
      "type": "object",
      "properties": {
        "event": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Title of the Event"
            },
            "status": {
              "type": "string",
              "description": "Status of the Event",
              "enum": [
                "active",
                "archived"
              ]
            }
          }
        }
      },
      "required": [
        "event"
      ],
      "description": "Create an external Event for Silex"
    },
    "data_wrapper_35974680": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/PerAngustaV3_Entities_Integrations_Silex_Event"
        }
      },
      "description": "data_wrapper_35974680 model"
    },
    "PerAngustaV3_Entities_Integrations_Silex_Event": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "Pjs8B8283LEd8kdRBzhzEpfYQR7oowKnfLqg5n2UZu9g3WUqN8Zf7v6gcaToFlkX",
          "description": "External ID"
        },
        "type": {
          "type": "string",
          "enum": [
            "Silex::Event"
          ],
          "example": "Silex::Event",
          "description": "Object type"
        },
        "attributes": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "example": "My sourcing event",
              "description": "Title"
            },
            "status": {
              "type": "string",
              "enum": [
                "active",
                "archived"
              ],
              "example": "started",
              "description": "Status"
            },
            "created_at": {
              "type": "string",
              "example": "2017-12-13T11:10:35.898Z",
              "description": "Creation date"
            },
            "updated_at": {
              "type": "string",
              "example": "2017-12-13T11:10:35.898Z",
              "description": "Last modification date"
            }
          },
          "required": [
            "title",
            "status",
            "created_at",
            "updated_at"
          ],
          "description": "Event attributes"
        }
      },
      "required": [
        "id",
        "type",
        "attributes"
      ]
    },
    "postBudgetsBudgetIdSilexEventsEventId": {
      "type": "object",
      "properties": {
        "event": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Title of the Event"
            },
            "status": {
              "type": "string",
              "description": "Status of the Event",
              "enum": [
                "active",
                "archived"
              ]
            }
          }
        }
      },
      "required": [
        "event"
      ],
      "description": "Update an external Event for Silex"
    },
    "data_wrapper_35974700": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/PerAngustaV3_Entities_Integrations_Silex_Event"
        }
      },
      "description": "data_wrapper_35974700 model"
    },
    "data_wrapper_35974720": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/PerAngustaV3_Entities_Integrations_Silex_Event"
        }
      },
      "description": "data_wrapper_35974720 model"
    },
    "postBudgetsBudgetIdArchletEvents": {
      "type": "object",
      "properties": {
        "event": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "UUID of the Event"
            },
            "name": {
              "type": "string",
              "description": "Title of the Event"
            },
            "url": {
              "type": "string",
              "description": "URL of the Event"
            }
          }
        }
      },
      "required": [
        "event"
      ],
      "description": "Create an external Event for Archlet"
    },
    "data_wrapper_35974740": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/PerAngustaV3_Entities_Integrations_Archlet_Event"
        }
      },
      "description": "data_wrapper_35974740 model"
    },
    "PerAngustaV3_Entities_Integrations_Archlet_Event": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "Pjs8B8283LEd8kdRBzhzEpfYQR7oowKnfLqg5n2UZu9g3WUqN8Zf7v6gcaToFlkX",
          "description": "External ID"
        },
        "type": {
          "type": "string",
          "enum": [
            "Integrations::Archlet::Event"
          ],
          "example": "Integrations::Archlet::Event",
          "description": "Object type"
        },
        "attributes": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "My sourcing event",
              "description": "Name"
            },
            "url": {
              "type": "string",
              "example": "projects/5930af45-d518-49d4-bd17-26d92b6b6846/bid-importer",
              "description": "URL"
            },
            "created_at": {
              "type": "string",
              "example": "2017-12-13T11:10:35.898Z",
              "description": "Creation date"
            },
            "updated_at": {
              "type": "string",
              "example": "2017-12-13T11:10:35.898Z",
              "description": "Last modification date"
            }
          },
          "required": [
            "name",
            "url",
            "created_at",
            "updated_at"
          ],
          "description": "Event attributes"
        }
      },
      "required": [
        "id",
        "type",
        "attributes"
      ]
    },
    "postBudgetsBudgetIdArchletEventsEventId": {
      "type": "object",
      "properties": {
        "event": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "UUID of the Event"
            },
            "name": {
              "type": "string",
              "description": "Title of the Event"
            },
            "url": {
              "type": "string",
              "description": "URL of the Event"
            }
          }
        }
      },
      "required": [
        "event"
      ],
      "description": "Update an external Event for Archlet"
    },
    "data_wrapper_35974760": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/PerAngustaV3_Entities_Integrations_Archlet_Event"
        }
      },
      "description": "data_wrapper_35974760 model"
    },
    "data_wrapper_35974780": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/PerAngustaV3_Entities_Integrations_Archlet_Event"
        }
      },
      "description": "data_wrapper_35974780 model"
    },
    "postNegotiations": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "description": "In case of authenticated End-User, do not specify this parameter\\\n                                                                    In case of authenticated Client, specify End-User’s email"
        },
        "negotiation": {
          "type": "object",
          "properties": {
            "state": {
              "type": "string",
              "description": "State",
              "enum": [
                "persisted_draft"
              ]
            },
            "attach_to_budget_id": {
              "type": "integer",
              "format": "int32",
              "description": "Project ID to which you would like to associate the Saving Report."
            },
            "name": {
              "type": "string",
              "description": "Title of the Saving Report"
            },
            "description": {
              "type": "string",
              "description": "Additional information"
            },
            "supplier": {
              "type": "string",
              "description": "Supplier name. Send this parameter with a blank value in case you want to override the behavior of default supplier attachment."
            },
            "currency": {
              "type": "string",
              "description": "Currency ISO code"
            },
            "amount_before": {
              "type": "integer",
              "format": "int64",
              "description": "Planned spend (total)"
            },
            "amount_before_annualised": {
              "type": "integer",
              "format": "int64",
              "description": "Planned spend (annualised)"
            },
            "amount_after": {
              "type": "integer",
              "format": "int64",
              "description": "Contracted spend (total)"
            },
            "amount_after_annualised": {
              "type": "integer",
              "format": "int64",
              "description": "Contracted spend (annualised)"
            },
            "custom_fields": {
              "type": "Object",
              "description": "Axes (or Custom Fields) configured on this object as a key value pair:\n- The key being the ID or the name of the axis (as a 'String')\n- The value being the value OR the id of the available option for this axis (if it's of type 'select')\n\nExample with IDs: `{ \"1\": \"Value for Axis 1\", \"2\": \"Value for Axis 2\" }`\n\nExample with names: `{ \"Axis Name 1\": \"Value 1\", \"Axis Name 2\": \"Value 2\" }`\n"
            }
          },
          "required": [
            "state"
          ]
        },
        "metadata": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Third-party object identifier"
            },
            "url": {
              "type": "string",
              "description": "Third-party object URL"
            },
            "name": {
              "type": "string",
              "description": "Third-party object name"
            },
            "lot_id": {
              "type": "string",
              "description": "Third-party lot identifier"
            },
            "lot_url": {
              "type": "string",
              "description": "Third-party lot URL"
            },
            "lot_name": {
              "type": "string",
              "description": "Third-party lot name"
            }
          },
          "required": [
            "id"
          ]
        }
      },
      "required": [
        "negotiation"
      ],
      "description": "Create a Savings Report"
    },
    "data_wrapper_35974800": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/PerAngustaV3_Entities_Negotiation"
        }
      },
      "description": "data_wrapper_35974800 model"
    },
    "PerAngustaV3_Entities_Negotiation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "Internal negotiation's ID"
        },
        "type": {
          "type": "string",
          "enum": [
            "Negotiation"
          ],
          "example": "Negotiation",
          "description": "Object type"
        },
        "attributes": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "Rental cars renegotiation",
              "description": "Name"
            },
            "currency": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Light_Currency",
              "example": "USD",
              "description": "Currency ISO code"
            },
            "custom_fields": {
              "type": "Object",
              "example": {
                "15": {
                  "value": 15000,
                  "field_type": "text",
                  "field_name": "Previous Year Spend",
                  "mandatory": false,
                  "is_archived": false
                },
                "16": {
                  "value": 28,
                  "field_type": "select",
                  "field_name": "Selectable field",
                  "value_human": "Option X",
                  "mandatory": false,
                  "is_archived": false
                }
              },
              "description": "Every analytical axis (or custom field) configured on this model will appear as a key value pair here.\n\nThe key being the 'id' of the applicable axis (as a String).\nThe value being an Object containing the following fields:\n* `value`       (String) contains either the content of the custom_field, or the 'id' of the available option (if the type is 'select').\n* `field_type`  (String) contains the type of the custom_field (numeric, date, text, string, select, select_multiple) configured in the axis.\n* `field_name`  (String) is a human readable version of the name of the custom field.\n* `mandatory`   (Boolean) defines if the axis is mandatory.\n* `is_archived` (Boolean) tells you if the available option is archived (boolean) (only if the field_type is 'select').\n* `value_human` (String) is a human readable version of the selected option (only if the field_type is 'select').\n"
            }
          },
          "required": [
            "name"
          ],
          "description": "Object attributes"
        },
        "relationships": {
          "type": "Object",
          "description": "Included resources"
        }
      },
      "required": [
        "id",
        "type",
        "attributes"
      ]
    },
    "data_wrapper_35974820": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerAngustaV3_Entities_Opportunity"
          }
        }
      },
      "description": "data_wrapper_35974820 model"
    },
    "PerAngustaV3_Entities_Opportunity": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "Internal opportunity ID"
        },
        "type": {
          "type": "string",
          "enum": [
            "Opportunity"
          ],
          "example": "Opportunity",
          "description": "Object type"
        },
        "attributes": {
          "type": "object",
          "properties": {
            "actiontype": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Light_Actiontype",
              "description": "Action type the opportunity belongs to"
            },
            "budgets": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Light_Budget",
              "description": "Budgets associated with the opportunity"
            },
            "category": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Light_Category",
              "description": "Category the opportunity belongs to"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "example": "2023-01-30T10:00:00.770Z",
              "description": "Created at"
            },
            "currency": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Light_Currency",
              "example": "USD",
              "description": "Currency ISO code"
            },
            "custom_fields": {
              "type": "Object",
              "example": {
                "15": {
                  "value": 15000,
                  "field_type": "text",
                  "field_name": "Previous Year Spend",
                  "mandatory": false,
                  "is_archived": false
                },
                "16": {
                  "value": 28,
                  "field_type": "select",
                  "field_name": "Selectable field",
                  "value_human": "Option X",
                  "mandatory": false,
                  "is_archived": false
                }
              },
              "description": "Every analytical axis (or custom field) configured on this model will appear as a key value pair here.\n\nThe key being the 'id' of the applicable axis (as a String).\nThe value being an Object containing the following fields:\n* `value`       (String) contains either the content of the custom_field, or the 'id' of the available option (if the type is 'select').\n* `field_type`  (String) contains the type of the custom_field (numeric, date, text, string, select, select_multiple) configured in the axis.\n* `field_name`  (String) is a human readable version of the name of the custom field.\n* `mandatory`   (Boolean) defines if the axis is mandatory.\n* `is_archived` (Boolean) tells you if the available option is archived (boolean) (only if the field_type is 'select').\n* `value_human` (String) is a human readable version of the selected option (only if the field_type is 'select').\n"
            },
            "description": {
              "type": "string",
              "example": "Wayne Corp. devices massive buy-in.",
              "description": "Description"
            },
            "ease_of_implementation": {
              "type": "integer",
              "format": "int32",
              "enum": [
                1,
                2,
                3,
                4,
                5
              ],
              "example": 1,
              "description": "Ease of implementation"
            },
            "end_on": {
              "type": "string",
              "example": "2022-12-31",
              "description": "End date of the opportunity"
            },
            "is_archived": {
              "type": "boolean",
              "example": "true",
              "description": "Opportunity archived"
            },
            "metadata": {
              "type": "Object",
              "example": {
                "id": "id",
                "url": "url",
                "name": "name"
              },
              "description": "Metadata"
            },
            "name": {
              "type": "string",
              "example": "Wayne Corp.",
              "description": "Name"
            },
            "status": {
              "type": "string",
              "enum": [
                "created",
                "approved",
                "rejected"
              ],
              "default": "created",
              "example": "created",
              "description": "Status"
            },
            "private": {
              "type": "boolean",
              "example": "true",
              "description": "Opportunity privacy"
            },
            "programs": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Light_Program",
              "description": "Programs associated with the opportunity through projects"
            },
            "savings": {
              "type": "number",
              "format": "float",
              "example": 987654.32,
              "description": "Savings potential"
            },
            "spend": {
              "type": "number",
              "format": "float",
              "example": 1234567.89,
              "description": "Spend at stake"
            },
            "stakeholder": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Light_Stakeholder",
              "description": "Stakeholder the opportunity belongs to"
            },
            "start_on": {
              "type": "string",
              "example": "2022-12-13",
              "description": "Start date of the opportunity"
            },
            "state": {
              "type": "string",
              "enum": [
                "draft",
                "completed",
                "waiting_for_approval",
                "persisted_draft"
              ],
              "default": "completed",
              "example": "completed",
              "description": "Completeness state"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "example": "2023-01-30T10:30:00.770Z",
              "description": "Updated at"
            }
          },
          "required": [
            "created_at",
            "end_on",
            "name",
            "savings",
            "spend",
            "start_on",
            "updated_at"
          ],
          "description": "Object attributes"
        },
        "relationships": {
          "type": "Object",
          "description": "Included resources"
        }
      },
      "required": [
        "id",
        "type",
        "attributes"
      ]
    },
    "PerAngustaV3_Entities_Light_Budget": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "Internal ID"
        },
        "name": {
          "type": "string",
          "example": "Purchasing Project",
          "description": "Name"
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "PerAngustaV3_Entities_Light_Stakeholder": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "ID"
        },
        "name": {
          "type": "string",
          "example": "Procurement",
          "description": "Name"
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "postOpportunities": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "description": "In case of authenticated Client, email (or external_id if configured as `claim` in SSO SAML) of the End-User (to act on its behalf)"
        },
        "policy": {
          "type": "object",
          "properties": {
            "mode": {
              "type": "string",
              "description": "Policy mode",
              "enum": [
                "read",
                "write"
              ]
            }
          }
        },
        "opportunity": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the opportunity, to CREATE a record"
            },
            "description": {
              "type": "string",
              "description": "Additional information",
              "default": ""
            },
            "private": {
              "type": "boolean",
              "description": "Private",
              "default": false
            },
            "is_archived": {
              "type": "boolean",
              "description": "Archived",
              "default": false
            },
            "currency": {
              "type": "string",
              "description": "Currency ISO code"
            },
            "start_on": {
              "type": "string",
              "format": "date",
              "description": "Start on"
            },
            "end_on": {
              "type": "string",
              "format": "date",
              "description": "End on"
            },
            "spend": {
              "type": "integer",
              "format": "int64",
              "description": "Spend at stake"
            },
            "savings": {
              "type": "integer",
              "format": "int64",
              "description": "Savings potential"
            },
            "state": {
              "type": "string",
              "description": "Completeness state",
              "enum": [
                "draft",
                "completed",
                "waiting_for_approval",
                "persisted_draft"
              ],
              "default": "completed"
            },
            "status": {
              "type": "string",
              "description": "Status",
              "enum": [
                "created",
                "approved",
                "rejected"
              ],
              "default": "created"
            },
            "review_description": {
              "type": "string",
              "description": "Approval status"
            },
            "category_id": {
              "type": "integer",
              "format": "int32",
              "description": "Category ID the opportunity belongs to"
            },
            "category_external_identifier": {
              "type": "string",
              "description": "Category External ID the opportunity belongs to"
            },
            "actiontype_id": {
              "type": "integer",
              "format": "int32",
              "description": "ActionType ID the opportunity belongs to"
            },
            "stakeholder_id": {
              "type": "integer",
              "format": "int32",
              "description": "Stakeholder ID the opportunity belongs to"
            },
            "ease_of_implementation": {
              "type": "integer",
              "format": "int32",
              "description": "Ease of implementation",
              "enum": [
                1,
                2,
                3,
                4,
                5
              ]
            },
            "custom_fields": {
              "type": "Object",
              "description": "Axes (or Custom Fields) configured on this object as a key value pair:\n- The key being the ID or the name of the axis (as a 'String')\n- The value being the value OR the id of the available option for this axis (if it's of type 'select')\n\nExample with IDs: `{ \"1\": \"Value for Axis 1\", \"2\": \"Value for Axis 2\" }`\n\nExample with names: `{ \"Axis Name 1\": \"Value 1\", \"Axis Name 2\": \"Value 2\" }`\n"
            }
          },
          "required": [
            "name",
            "review_description"
          ]
        },
        "metadata": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Third-party object identifier"
            },
            "url": {
              "type": "string",
              "description": "Third-party object URL"
            },
            "name": {
              "type": "string",
              "description": "Third-party object name"
            }
          }
        }
      },
      "required": [
        "opportunity"
      ],
      "description": "Create an opportunity"
    },
    "data_wrapper_35974840": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/PerAngustaV3_Entities_Opportunity"
        }
      },
      "description": "data_wrapper_35974840 model"
    },
    "data_wrapper_35974860": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/PerAngustaV3_Entities_Opportunity"
        }
      },
      "description": "data_wrapper_35974860 model"
    },
    "patchOpportunitiesOpportunityId": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "description": "In case of authenticated Client, email (or external_id if configured as `claim` in SSO SAML) of the End-User (to act on its behalf)"
        },
        "policy": {
          "type": "object",
          "properties": {
            "mode": {
              "type": "string",
              "description": "Policy mode",
              "enum": [
                "read",
                "write"
              ]
            }
          }
        },
        "opportunity": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the opportunity"
            },
            "description": {
              "type": "string",
              "description": "Additional information",
              "default": ""
            },
            "private": {
              "type": "boolean",
              "description": "Private",
              "default": false
            },
            "is_archived": {
              "type": "boolean",
              "description": "Archived",
              "default": false
            },
            "currency": {
              "type": "string",
              "description": "Currency ISO code"
            },
            "start_on": {
              "type": "string",
              "format": "date",
              "description": "Start on"
            },
            "end_on": {
              "type": "string",
              "format": "date",
              "description": "End on"
            },
            "spend": {
              "type": "integer",
              "format": "int64",
              "description": "Spend at stake"
            },
            "savings": {
              "type": "integer",
              "format": "int64",
              "description": "Savings potential"
            },
            "state": {
              "type": "string",
              "description": "Completeness state",
              "enum": [
                "draft",
                "completed",
                "waiting_for_approval",
                "persisted_draft"
              ],
              "default": "completed"
            },
            "status": {
              "type": "string",
              "description": "Status",
              "enum": [
                "created",
                "approved",
                "rejected"
              ],
              "default": "created"
            },
            "review_description": {
              "type": "string",
              "description": "Approval status"
            },
            "category_id": {
              "type": "integer",
              "format": "int32",
              "description": "Category ID the opportunity belongs to"
            },
            "category_external_identifier": {
              "type": "string",
              "description": "Category External ID the opportunity belongs to"
            },
            "actiontype_id": {
              "type": "integer",
              "format": "int32",
              "description": "ActionType ID the opportunity belongs to"
            },
            "stakeholder_id": {
              "type": "integer",
              "format": "int32",
              "description": "Stakeholder ID the opportunity belongs to"
            },
            "ease_of_implementation": {
              "type": "integer",
              "format": "int32",
              "description": "Ease of implementation",
              "enum": [
                1,
                2,
                3,
                4,
                5
              ]
            },
            "custom_fields": {
              "type": "Object",
              "description": "Axes (or Custom Fields) configured on this object as a key value pair:\n- The key being the ID or the name of the axis (as a 'String')\n- The value being the value OR the id of the available option for this axis (if it's of type 'select')\n\nExample with IDs: `{ \"1\": \"Value for Axis 1\", \"2\": \"Value for Axis 2\" }`\n\nExample with names: `{ \"Axis Name 1\": \"Value 1\", \"Axis Name 2\": \"Value 2\" }`\n"
            }
          },
          "required": [
            "review_description"
          ]
        },
        "metadata": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Third-party object identifier"
            },
            "url": {
              "type": "string",
              "description": "Third-party object URL"
            },
            "name": {
              "type": "string",
              "description": "Third-party object name"
            }
          }
        }
      },
      "required": [
        "opportunity"
      ],
      "description": "Update an opportunity"
    },
    "data_wrapper_35974880": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/PerAngustaV3_Entities_Opportunity"
        }
      },
      "description": "data_wrapper_35974880 model"
    },
    "data_wrapper_35974900": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/PerAngustaV3_Entities_Widgets_SupplierSummary"
        }
      },
      "description": "data_wrapper_35974900 model"
    },
    "PerAngustaV3_Entities_Widgets_SupplierSummary": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "Internal supplier's ID"
        },
        "type": {
          "type": "string",
          "enum": [
            "Supplier"
          ],
          "example": "Supplier",
          "description": "Object type"
        },
        "attributes": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "Wayne Corp.",
              "description": "Name"
            },
            "panel": {
              "type": "Object",
              "description": "Panel"
            },
            "custom_fields": {
              "type": "Object",
              "example": {
                "15": {
                  "value": 15000,
                  "field_type": "text",
                  "field_name": "Previous Year Spend",
                  "mandatory": false,
                  "is_archived": false
                },
                "16": {
                  "value": 28,
                  "field_type": "select",
                  "field_name": "Selectable field",
                  "value_human": "Option X",
                  "mandatory": false,
                  "is_archived": false
                }
              },
              "description": "Every analytical axis (or custom field) configured on this model will appear as a key value pair here.\n\nThe key being the 'id' of the applicable axis (as a String).\nThe value being an Object containing the following fields:\n* `value`       (String) contains either the content of the custom_field, or the 'id' of the available option (if the type is 'select').\n* `field_type`  (String) contains the type of the custom_field (numeric, date, text, string, select, select_multiple) configured in the axis.\n* `field_name`  (String) is a human readable version of the name of the custom field.\n* `mandatory`   (Boolean) defines if the axis is mandatory.\n* `is_archived` (Boolean) tells you if the available option is archived (boolean) (only if the field_type is 'select').\n* `value_human` (String) is a human readable version of the selected option (only if the field_type is 'select').\n"
            },
            "internal_url": {
              "type": "string",
              "example": "https://demo.per-angusta.com/suppliers/1",
              "description": "Direct link"
            },
            "spend": {
              "type": "Object",
              "description": "Spend"
            },
            "projects": {
              "type": "Object",
              "description": "Projects"
            },
            "contracts": {
              "type": "Object",
              "description": "Contracts"
            },
            "owner": {
              "type": "Object",
              "description": "Owner"
            }
          },
          "required": [
            "name",
            "panel",
            "internal_url",
            "spend",
            "projects",
            "contracts",
            "owner"
          ],
          "description": "Object attributes"
        }
      },
      "required": [
        "id",
        "type",
        "attributes"
      ]
    },
    "data_wrapper_35974920": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerAngustaV3_Entities_Widgets_PhaseSummary"
          }
        }
      },
      "description": "data_wrapper_35974920 model"
    },
    "PerAngustaV3_Entities_Widgets_PhaseSummary": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "Internal phase's ID"
        },
        "type": {
          "type": "string",
          "enum": [
            "Phase"
          ],
          "example": "Phase",
          "description": "Object type"
        },
        "attributes": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "Completed",
              "description": "Name"
            },
            "budgets_count": {
              "type": "integer",
              "format": "int32",
              "description": "Budgets count"
            }
          },
          "required": [
            "name",
            "budgets_count"
          ],
          "description": "Object attributes"
        }
      },
      "required": [
        "id",
        "type",
        "attributes"
      ]
    },
    "data_wrapper_35974940": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerAngustaV3_Entities_DataSourceTemplate"
          }
        }
      },
      "description": "data_wrapper_35974940 model"
    },
    "PerAngustaV3_Entities_DataSourceTemplate": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "Supplier",
          "description": "Internal data_source's unique ID"
        },
        "type": {
          "type": "string",
          "enum": [
            "DataSourceTemplate"
          ],
          "example": "DataSourceTemplate",
          "description": "Object type"
        },
        "attributes": {
          "type": "object",
          "properties": {
            "data_source_type": {
              "type": "string",
              "example": "Supplier",
              "description": "Type"
            },
            "friendly_name": {
              "type": "string",
              "example": "Batch import of suppliers",
              "description": "Friendly name"
            },
            "columns": {
              "type": "Object",
              "example": [
                "id",
                "name",
                "country_code",
                "legal_identifier",
                "vat_number",
                "duns_number",
                "external_identifier",
                "external_identifier_coupa",
                "external_identifier_corcentric",
                "assets/external_url/1/document_url",
                "assets/external_url/1/document_file_description",
                "assets/external_url/2/document_url",
                "assets/external_url/2/document_file_description",
                "assets/external_url/3/document_url",
                "assets/external_url/3/document_file_description",
                "assets/external_url/4/document_url",
                "assets/external_url/4/document_file_description",
                "assets/external_url/5/document_url",
                "assets/external_url/5/document_file_description",
                "parent/id",
                "parent/external_identifier",
                "parent/legal_identifier",
                "parent/vat_number",
                "parent/duns_number",
                "parent/name",
                "is_archived"
              ],
              "description": "Object attributes"
            }
          },
          "required": [
            "data_source_type",
            "friendly_name",
            "columns"
          ],
          "description": "Object attributes"
        }
      },
      "required": [
        "id",
        "type",
        "attributes"
      ]
    },
    "postDataSources": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "description": "In case of authenticated End-User, do not specify this parameter\\\n                                                                In case of authenticated Client, specify End-User’s email"
        },
        "data_source": {
          "type": "object",
          "properties": {
            "data_source_type": {
              "type": "string",
              "description": "Type of the data_source (e.g. Supplier). Please refer to the templates endpoint for more information on available types."
            }
          },
          "required": [
            "data_source_type"
          ]
        }
      },
      "required": [
        "data_source"
      ],
      "description": "Create data import"
    },
    "data_wrapper_35974960": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerAngustaV3_Entities_DataSource"
          }
        }
      },
      "description": "data_wrapper_35974960 model"
    },
    "PerAngustaV3_Entities_DataSource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "Internal data_source's unique ID"
        },
        "type": {
          "type": "string",
          "enum": [
            "DataSource"
          ],
          "example": "DataSource",
          "description": "Object type"
        },
        "attributes": {
          "type": "object",
          "properties": {
            "data_source_type": {
              "type": "string",
              "example": "Supplier",
              "description": "Type"
            },
            "friendly_name": {
              "type": "string",
              "example": "Mass Update / Projects / Total & annualised amounts (Target/forecast)",
              "description": "Friendly name"
            },
            "import_state": {
              "type": "string",
              "enum": [
                "uploaded",
                "processing",
                "stopping",
                "success",
                "error"
              ],
              "example": "success",
              "description": "Import state"
            },
            "import_message": {
              "type": "string",
              "example": "2 elements were imported",
              "description": "Import message"
            },
            "created_at": {
              "type": "string",
              "example": "2017-12-13T11:10:35.898Z",
              "description": "Creation date"
            },
            "updated_at": {
              "type": "string",
              "example": "2017-12-13T11:10:35.898Z",
              "description": "Last object update date"
            }
          },
          "required": [
            "data_source_type",
            "friendly_name",
            "import_state",
            "import_message",
            "created_at",
            "updated_at"
          ],
          "description": "Object attributes"
        }
      },
      "required": [
        "id",
        "type",
        "attributes"
      ]
    },
    "data_wrapper_35974980": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerAngustaV3_Entities_DataSource"
          }
        }
      },
      "description": "data_wrapper_35974980 model"
    },
    "data_wrapper_35975000": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/PerAngustaV3_Entities_DataSource"
        }
      },
      "description": "data_wrapper_35975000 model"
    },
    "patchSessionsId": {
      "type": "object",
      "properties": {
        "session": {
          "type": "object",
          "properties": {
            "is_authenticated": {
              "type": "boolean",
              "description": "Authentication status"
            },
            "duration_in_minutes": {
              "type": "integer",
              "format": "int32",
              "description": "Time before session is expired"
            },
            "user": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "User ID"
                },
                "email": {
                  "type": "string",
                  "description": "User Email"
                }
              }
            },
            "impersonated_user": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Impersonated User ID"
                },
                "email": {
                  "type": "string",
                  "description": "Impersonated User Email"
                }
              }
            },
            "impersonated_by_user": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Impersonated By User ID"
                },
                "email": {
                  "type": "string",
                  "description": "Impersonated By User Email"
                }
              }
            }
          },
          "required": [
            "user"
          ]
        }
      },
      "required": [
        "session"
      ],
      "description": "Update Session"
    },
    "data_wrapper_35975020": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/PerAngustaV3_Entities_Session"
        }
      },
      "description": "data_wrapper_35975020 model"
    },
    "PerAngustaV3_Entities_Session": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "b113c638-648e-41da-aff3-24989988c609",
          "description": "Internal ID"
        },
        "type": {
          "type": "string",
          "enum": [
            "Session"
          ],
          "example": "Session",
          "description": "Object type"
        },
        "attributes": {
          "type": "object",
          "properties": {
            "is_authenticated": {
              "type": "boolean",
              "example": true,
              "description": ""
            },
            "user_id": {
              "type": "integer",
              "format": "int32",
              "example": 42,
              "description": ""
            },
            "user_email": {
              "type": "string",
              "example": "user42@domain.com",
              "description": ""
            },
            "impersonated_by_user_id": {
              "type": "integer",
              "format": "int32",
              "example": 48,
              "description": ""
            },
            "impersonated_by_user_email": {
              "type": "string",
              "example": "user48@domain.com",
              "description": ""
            },
            "duration_in_minutes": {
              "type": "integer",
              "format": "int32",
              "example": 20,
              "description": ""
            },
            "redirect_url": {
              "type": "string",
              "example": "https://staging.per-angusta.com/auth/sign_in_via_token/xyz...xyz",
              "description": ""
            }
          },
          "required": [
            "is_authenticated",
            "duration_in_minutes",
            "redirect_url"
          ],
          "description": "Object attributes"
        }
      },
      "required": [
        "id",
        "type",
        "attributes"
      ]
    },
    "data_wrapper_35975040": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerAngustaV3_Entities_Contract"
          }
        }
      },
      "description": "data_wrapper_35975040 model"
    },
    "PerAngustaV3_Entities_Contract": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "Internal ID"
        },
        "type": {
          "type": "string",
          "example": "ProcurementContract",
          "description": "Type"
        },
        "attributes": {
          "type": "object",
          "properties": {
            "assets": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PerAngustaV3_Entities_Light_Documents"
              }
            },
            "additional_countries": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PerAngustaV3_Entities_Light_Country"
              },
              "description": "Participating countries"
            },
            "agent_id": {
              "type": "integer",
              "format": "int64",
              "description": "Managing agent"
            },
            "associated_businessunits": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PerAngustaV3_Entities_Light_BusinessUnit"
              }
            },
            "associated_categories": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PerAngustaV3_Entities_Light_Category"
              }
            },
            "budget_id": {
              "type": "integer",
              "format": "int32",
              "description": "project/budget internal ID"
            },
            "businessunit": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Light_BusinessUnit",
              "description": "Business Unit"
            },
            "category": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Light_Category",
              "description": "Main category"
            },
            "commercial_commitment": {
              "type": "boolean",
              "example": true,
              "description": "Commitment"
            },
            "commercial_flexibility": {
              "type": "boolean",
              "example": true,
              "description": "Flexibility"
            },
            "commercial_indexation_cap": {
              "type": "number",
              "format": "float",
              "example": 0.1,
              "description": "Indexation cap"
            },
            "commercial_kickback": {
              "type": "boolean",
              "example": true,
              "description": "Year-end rebate"
            },
            "commercial_notes": {
              "type": "string",
              "example": "my commercial notes",
              "description": "Notes (Commercial)"
            },
            "commercial_payment_term": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "description": "Payment terms"
            },
            "commercial_price_hold": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "description": "Price hold"
            },
            "contract_type": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Light_ContractType",
              "example": 1,
              "description": "Contract type"
            },
            "contract_value": {
              "type": "number",
              "format": "float",
              "example": 699.3,
              "description": "Total Contract Value"
            },
            "contract_value_annualised": {
              "type": "number",
              "format": "float",
              "example": 1800000,
              "description": "Annualised contract value"
            },
            "contract_value_annualised_base": {
              "type": "number",
              "format": "float",
              "example": 341240,
              "description": "Annualised contract value (base)"
            },
            "contract_value_base": {
              "type": "number",
              "format": "float",
              "example": 570000,
              "description": "Total Contract Value (base)"
            },
            "conversion_ratio": {
              "type": "number",
              "format": "float",
              "example": 1.1,
              "description": "Base currency conversion ratio"
            },
            "country": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Light_Country",
              "description": "Country"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "example": "2023-01-30T10:00:00.770Z",
              "description": {
                "name": "Creation date"
              }
            },
            "creator": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Light_User",
              "description": "Contract owner"
            },
            "currency": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Light_Currency",
              "description": "Currency"
            },
            "custom_fields": {
              "type": "Object",
              "example": {
                "15": {
                  "value": 15000,
                  "field_type": "text",
                  "field_name": "Previous Year Spend",
                  "mandatory": false,
                  "is_archived": false
                },
                "16": {
                  "value": 28,
                  "field_type": "select",
                  "field_name": "Selectable field",
                  "value_human": "Option X",
                  "mandatory": false,
                  "is_archived": false
                }
              },
              "description": "Every analytical axis (or custom field) configured on this model will appear as a key value pair here.\n\nThe key being the 'id' of the applicable axis (as a String).\nThe value being an Object containing the following fields:\n* `value`       (String) contains either the content of the custom_field, or the 'id' of the available option (if the type is 'select').\n* `field_type`  (String) contains the type of the custom_field (numeric, date, text, string, select, select_multiple) configured in the axis.\n* `field_name`  (String) is a human readable version of the name of the custom field.\n* `mandatory`   (Boolean) defines if the axis is mandatory.\n* `is_archived` (Boolean) tells you if the available option is archived (boolean) (only if the field_type is 'select').\n* `value_human` (String) is a human readable version of the selected option (only if the field_type is 'select').\n"
            },
            "description": {
              "type": "string",
              "example": "my description",
              "description": "Notes"
            },
            "end_date": {
              "type": "string",
              "format": "Date",
              "example": "2024-01-01",
              "description": "End date"
            },
            "external_id": {
              "type": "string",
              "example": "XYZ_42",
              "description": "External ID"
            },
            "international_agreement": {
              "type": "boolean",
              "example": true,
              "description": "International agreement"
            },
            "is_evergreen": {
              "type": "boolean",
              "example": true,
              "description": "Renews automatically"
            },
            "is_open_ended": {
              "type": "boolean",
              "example": true,
              "description": "Open ended"
            },
            "is_prorogated": {
              "type": "boolean",
              "example": true,
              "description": "Prorogated"
            },
            "liability_cap": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "description": "Liability cap"
            },
            "liability_is_uncapped": {
              "type": "boolean",
              "example": true,
              "description": "Uncapped liability"
            },
            "name": {
              "type": "string",
              "example": "my text",
              "description": "Title"
            },
            "negotiation_id": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "description": "Related savings report"
            },
            "notice_period": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "description": "Notification period"
            },
            "original_end_date": {
              "type": "string",
              "format": "Date",
              "example": "2024-01-01",
              "description": "Original end date"
            },
            "parent_id": {
              "type": "integer",
              "format": "int32",
              "description": "Parent contract ID"
            },
            "reference_code": {
              "type": "string",
              "example": "ref_128",
              "description": "Ref."
            },
            "signature_date": {
              "type": "string",
              "format": "Date",
              "example": "2024-01-01",
              "description": "Signature date"
            },
            "sla": {
              "type": "boolean",
              "example": true,
              "description": "SLA"
            },
            "sla_notes": {
              "type": "string",
              "example": "SLA notes:...",
              "description": "Notes (SLA)"
            },
            "sla_penalties": {
              "type": "boolean",
              "example": true,
              "description": "Penalty scheme"
            },
            "stakeholder": {
              "$ref": "#/definitions/PerAngustaV3_Entities_Light_Stakeholder",
              "description": "Stakeholder"
            },
            "start_date": {
              "type": "string",
              "format": "Date",
              "example": "2024-01-01",
              "description": "Effective date"
            },
            "state": {
              "type": "integer",
              "format": "int32",
              "example": "completed",
              "description": "State"
            },
            "supplier_id": {
              "type": "string",
              "example": 1,
              "description": "supplier id"
            },
            "terminated_on": {
              "type": "string",
              "format": "Date",
              "example": "2024-01-01",
              "description": "Terminated on"
            },
            "termination_convenience": {
              "type": "boolean",
              "example": true,
              "description": "Termination for convenience"
            },
            "termination_exit_fee": {
              "type": "number",
              "format": "float",
              "example": 0.1,
              "description": "Exit fee"
            },
            "termination_notes": {
              "type": "string",
              "example": "my text",
              "description": "Notes about termination"
            },
            "termination_notice_period": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "description": "Termination notice"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "example": "2023-01-30T10:00:00.770Z",
              "description": {
                "name": "Last modification"
              }
            }
          },
          "required": [
            "commercial_commitment",
            "commercial_flexibility",
            "commercial_kickback",
            "contract_value",
            "contract_value_annualised",
            "contract_value_annualised_base",
            "contract_value_base",
            "conversion_ratio",
            "currency",
            "international_agreement",
            "is_evergreen",
            "is_open_ended",
            "is_prorogated",
            "liability_is_uncapped",
            "sla",
            "sla_penalties",
            "termination_convenience",
            "termination_notice_period"
          ],
          "description": "Object attributes"
        }
      },
      "required": [
        "id",
        "type",
        "attributes"
      ]
    },
    "PerAngustaV3_Entities_Light_Documents": {
      "type": "object",
      "properties": {
        "content_type": {
          "type": "string",
          "example": "application/pdf",
          "description": "Document content type"
        },
        "file_name": {
          "type": "string",
          "description": "Document name"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "ID"
        }
      }
    },
    "PerAngustaV3_Entities_Light_BusinessUnit": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "ID"
        },
        "name": {
          "type": "string",
          "example": "Procurement",
          "description": "Title"
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "PerAngustaV3_Entities_Light_ContractType": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "ID"
        },
        "name": {
          "type": "string",
          "example": "contract type name",
          "description": "Name"
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "data_wrapper_35975060": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/PerAngustaV3_Entities_Contract"
        }
      },
      "description": "data_wrapper_35975060 model"
    }
  }
}
